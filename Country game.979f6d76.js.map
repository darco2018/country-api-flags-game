{"version":3,"sources":["index.js"],"names":["countryArray","correctAnswer","userAnswer","flagImg","document","getElementById","first","querySelector","second","third","firstInput","secondInput","thirdInput","firstCircle","secondCircle","thirdCircle","answer","form","NUMBER_OF_OPTIONS","API_URL","options","next","init","requestCountryData","reset","innerHTML","generateOptionsAsIndexes","shuffle","renderCountryNamesOnBtns","extractCountryNames","setFlagUrl","extractFlag","getRandomInt","length","generateCorrectAnswer","index","fetch","response","json","console","log","renderResult","msg","min","max","random","Math","ceil","floor","countryNames","innerText","name","value","flag","src","names","countryNmb","i","array","j","temp","addEventListener","event","FormData","Number","preventDefault"],"mappings":"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","file":"Country game.979f6d76.js","sourceRoot":"..","sourcesContent":["// set constants for number of options, country array\n// vars: options(array which keeps indexes), correctAnswer(index), userAnswer(index),   \n\n/* ----------------------- HTML elements -------------------------- */\nlet flagImg = document.getElementById(\"flag\");\nlet first = document.querySelector(\"#options .option:nth-of-type(1) label\");\nlet second = document.querySelector(\"#options .option:nth-of-type(2) label\");\nlet third = document.querySelector(\"#options .option:nth-of-type(3) label\");\nlet firstInput = document.getElementById(\"choice1\");\nlet secondInput = document.getElementById(\"choice2\");\nlet thirdInput = document.getElementById(\"choice3\");\nlet firstCircle = document.getElementById(\"circleOne\");\nlet secondCircle = document.getElementById(\"circleTwo\");\nlet thirdCircle = document.getElementById(\"circleThree\");\nlet answer = document.getElementById(\"answer\");\nlet form = document.querySelector(\"form\");\n// other variables \nconst NUMBER_OF_OPTIONS = 3;\nconst API_URL = \"https://restcountries.eu/rest/v2/all\"\nlet countryArray;\nlet options = [];\nlet correctAnswer;\nlet next = document.getElementById(\"nextBtn\");\nlet userAnswer;\n\n\ninit();\n\n/* -------------------------- Event listeners ---------------------------- */\nform.addEventListener(\"submit\", function (event) {\n    var options = new FormData(form);\n    let userAnswer = \"\";\n    for (const option of options) {\n        userAnswer = option[1];\n    };\n    renderResult(Number(userAnswer) === correctAnswer\n        ? \"Correct!\"\n        : \"Inncorect! Correct answer is \" + countryArray[correctAnswer].name);\n\n    event.preventDefault();\n}, false);\n\nnext.addEventListener(\"click\", function () {\n    reset();\n});\n\n\n\n/* ------------------------------ main methods --------------------------- */\n\nasync function init() {\n    countryArray = await requestCountryData();\n    reset();\n}\n\n\nasync function reset() {\n    answer.innerHTML = \"\";\n    options = generateOptionsAsIndexes(); // 56, 78, 134\n    correctAnswer = options[0]; // 56\n    shuffle(options);\n    renderCountryNamesOnBtns(extractCountryNames());\n    setFlagUrl(extractFlag(correctAnswer));\n}\n\nfunction generateOptionsAsIndexes() {\n    let opt1 = getRandomInt(0, countryArray.length);\n    let opt2 = getRandomInt(0, countryArray.length);\n    let opt3 = getRandomInt(0, countryArray.length);\n    return [opt1, opt2, opt3];\n}\n\nfunction generateCorrectAnswer(options) {\n    let index = getRandomInt(0, options.length);\n    return index;\n}\n\n\n/* ------------------------------ heplers ----------------------------- */\nasync function requestCountryData() {\n    try {\n        let response = await fetch(API_URL);\n        let countryArray = await response.json();\n        return countryArray;\n    } catch (error) {\n        console.log(error);\n    }\n}\nfunction renderResult(msg) {\n    answer.innerHTML = msg;\n}\n/**\n * Returns a random number between min (inclusive) and max(exclusive)\n */\nfunction getRandomInt(min, max) {\n    let maxExclusive = true;\n    min = Math.ceil(min);\n    max = maxExclusive ? Math.floor(max) - 1 : Math.floor(max);\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    return random;\n}\n\nfunction renderCountryNamesOnBtns(countryNames) {\n    first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name;\n    firstInput.value = options[0];\n    secondInput.value = options[1];\n    thirdInput.value = options[2];\n}\n\nfunction setFlagUrl(flag) {\n    flagImg.src = flag;\n}\n\nfunction extractCountryNames() {\n    let names = [];\n    let countryNmb;\n    for (let i = 0; i < options.length; i++) {\n        countryNmb = options[i];\n        names[i] = countryArray[countryNmb].name;\n    }\n    return names;\n}\n\nfunction extractFlag(correctAnswer) {\n    return countryArray[correctAnswer].flag;\n}\nfunction shuffle(array) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}"]}