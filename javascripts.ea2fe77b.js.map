{"version":3,"sources":["modulev2/player-module-v2.js","modulev2/game-module-v2.js","javascripts/index.js"],"names":["Player","playerId","id","score","getId","getScore","Number","setScore","playerScore","Error","toString","Game","gameName","numberOfTurns","name","noOfTurns","currentPlayer","undefined","players","currentTurn","getGameName","addPlayer","player","push","removePlayer","initialLength","length","filter","p","getNoOfPlayers","setNoOfTurns","getNoOfTurns","incrementTurn","resetCurrentTurn","getCurrentTurn","getCurrentPlayer","setCurrentPlayer","getWinners","result","_isDrawInternal","winners","forEach","highestScore","isDraw","frequency","map","Map","currScore","has","set","get","flagImg","document","getElementById","first","querySelector","second","third","firstInput","secondInput","thirdInput","firstCircle","secondCircle","thirdCircle","answer","form","p1Score","p2Score","p1MatchScore","p2MatchScore","resetBtn","levelNumber","matchNumber","playersNumber","radioBtns","querySelectorAll","NUMBER_OF_OPTIONS","gameNumber","API_URL","countryArray","options","correctAnswer","next","userAnswer","flagsPerMatch","nextFlagAllowed","level","game","difficulty","easyFlags","mediumFlags","player1","player2","init","initGame","classList","add","localStorage","getItem","setItem","renderScores","addEventListener","event","remove","disableRadioButtons","getUserAnswer","renderAnswer","changeTurn","preventDefault","reset","i","checked","value","disabled","userGuessed","renderResult","updateScore","requestCountryData","console","log","initNewMatch","innerHTML","currPlayer","generateOptionsAsIndexes","shuffle","renderCountryNamesOnBtns","extractCountryNames","setFlagUrl","extractFlag","opt1","getRandomInt","opt2","opt3","isCountryHardEnough","opt","response","fetch","json","error","msg","min","max","maxExclusive","Math","ceil","floor","random","countryNames","innerText","flag","src","names","countryNmb","array","j","temp"],"mappings":";;AEAA;;AACA;;AACA;AACA,ADHA,ADAO,SAASA,MAAT,CAAgBC,QAAhB,EAAyB;AAC5B;AEKJ,ADFO,ADFH,QAAMC,CCEMS,CDFJ,GCEL,ADFQV,CCEMW,ODFjB,CCEG,EAAwBC,aAAxB,EAAuC;ACG9C,ADFI,ADFA,IEIAsC,EFJIhD,ECEEW,GCEC,AFJE,CCEC,ECEAsC,AFJE,CCECxC,ADFb,OEIkB,CAACyC,ADFnB,cCEU,CAAwB,MAAxB,CAAd;AACA,ADFI,ICEAC,EDFIvC,GCEC,GAAGqC,GDFK,GAAGvC,ECEA,CAAC0C,UDFjB,GCEQ,CAAuB,uCAAvB,CAAZ;AACA,ADDI,ADFA,IEGAC,EDDIxC,CDFCZ,GEGC,EFHN,CEGSgD,EFHI,ICEI,ECCA,AFHE,CEGDG,ADDEtC,SAApB,ICCS,CAAuB,uCAAvB,CAAb;AACA,ADDI,ADFI,IEGJwC,EDDIvC,GCCC,EFHMhB,CEGHkD,CDDG,ADFP,GCEU,EAAd,ECCgB,CAACG,aAAT,CAAuB,uCAAvB,CAAZ;AACA,ADDI,ADFC,GAFD,CEKAG,EDDIvC,QCCM,GAAGiC,ADDE,GAAG,CAAlB,ICCqB,CAACC,cAAT,CAAwB,SAAxB,CAAjB;AACA,IAAIM,WAAW,GAAGP,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB;AACA,ADDI,ADFA,IEGAO,GDDKxC,ADFAf,OEGK,CFHV,EEGa+C,CDDb,ADFgB,GCEG,GDFG,CEGD,CAACC,CDDG,aCCZ,CAAwB,SAAxB,CAAjB;AACA,ADDQ,ADFA,IEGJQ,ODDW/C,ADFAR,IEGA,ADDP,EDFa,CEGH8C,AFHIjD,KAAD,CAAb,EEGkB,CAACkD,cAAT,CAAwB,WAAxB,CAAlB;AACA,ADDK,ADFA,GCAD,ADFA,CEKAS,AFf4B,CAa5B,WEEY,GAAGV,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAnB;AACA,IAAIU,WAAW,GAAGX,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AACA,ADDI,ICCAW,GDDK3C,GCCC,GAAG+B,GDDT,GAAkB9B,ECCD,CAAC+B,GDDD,IAAY,OCCpB,CAAwB,QAAxB,CAAb;AACA,ADDQnC,ADHJ,IEIA+C,ADDI/C,GDHCX,CEID,GAAG6C,ADDI,CAAC7B,GDHZ,CCGI,CAAaD,CDHAd,CEIF,CAAC+C,GDDZ,MDHY,IEIT,AFJ0B,CEIH,MAAvB,CAAX;AACA,ADDK,ADHG,GCCJ,CCGAW,IFJQ1D,GEID,GAAG4C,KFJS,GEID,AFJI,CEIHG,AFJf,EAAqB,WEIf,CAAuB,aAAvB,CAAd;AACA,AFJY,IEIRY,OAAO,CFJO,EEIJf,EFJQ3C,KAAJ,CEII,AFJM,CEIL8C,aAAT,CAAuB,WFJnB,CEIJ,AFJF,CEIZ;AAEA,ADFI,ADHK,IEKLa,GDFK5C,SCEO,GAAG4B,ADFf,GAAqB9B,KCEE,CAACiC,ADFJ,IAAY,SCEjB,CAAuB,eAAvB,CAAnB;AACA,ADFQ,ICEJc,IDFQ5C,QCEI,GAAG2B,EDFM,GAAGlC,GCED,CAACqC,GDFO,CAAC7B,MAA5B,GCEW,CAAuB,eAAvB,CAAnB;AACA,ADFQR,ADJAf,IEMJmE,ADFIpD,ADJAf,KAAK,ECIE,CCEH,AFNIG,ECIEY,CCEHkC,GFNO,CAAC5C,ECIE,CAACmB,CCEH,CAAC4B,IDFN,CAAe3B,CAAC,ADJZ,CAAd,GCI8BA,CAAC,CAAC1B,CCEzB,CAAuB,ADFA,KAASoB,MCEhC,ADFsC,CCErD,ADFsDpB,EAApC,CAAV;ACGR,AFNK,GALD,CEWAqE,WAAW,GAAGnB,QAAQ,CAACG,aAAT,CAAuB,cAAvB,CAAlB;AACA,ADFQ,ICEJiB,IDFQ/C,OCEG,GAAG2B,GDFO,KCEC,ADFIlC,CCEHqC,MDFU,CAAC7B,MCEpB,ADFV,CCEiC,CDFK,aCE5B,CAAlB;AACA,ADFY,ADJR,IEMA+C,GFNK/D,KCIS,GDJd,CCIkBD,CCEL,CFNG,EEMA2C,CDFF,CAAU,EDJF,IEME,CAACG,aAAT,CAAuB,gBAAvB,CAApB,ODFkB,CAAN;ACIZ,ADHS,ADJD,IEOJmB,OFPW,EEOF,GAAGtB,IFPQlD,EAAT,EEOS,CAACyE,AFPI,WAAd,GAA4BxE,EEO3B,CAA0B,EFPlC,iBEOQ,CAAhB,EACA;ADHK,ADJA,GCHD,ADCA;AEUJ,AFPC,MEOKyE,iBAAiB,GAAG,CAA1B;AACA,ADHI,ICGAC,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","file":"javascripts.ea2fe77b.js","sourceRoot":"../src","sourcesContent":["export function Player(playerId){\n    // 1\n    const id = playerId;\n    let score = 0;\n\n\n    this.getId = () => {\n        return id;\n    }\n  \n    this.getScore = () => {\n        return Number(score);\n    }\n    // 2 3 \n    this.setScore = (playerScore) => {\n        if (playerScore < 0) {\n            throw new Error(\"Score cannot be negative\");\n        }\n        score = Number(playerScore);\n    }\n\n    this.toString = () => {\n        return \"id: \" + id + \", score: \" + score;\n    };\n}","import { Player } from \"./player-module-v2\";\n\n\n\nexport function Game(gameName, numberOfTurns) {\n    const name = gameName;\n    let noOfTurns = numberOfTurns;\n\n    let currentPlayer = undefined;\n    let players = [];\n    let currentTurn = 1;\n\n    this.getGameName = () => {\n        return name;\n    }\n\n    this.addPlayer = (player) => {\n        players.push(player);\n    }\n\n    this.removePlayer = (player) => {\n        let initialLength = players.length;\n        players = players.filter(p => p.id !== player.id);\n\n        if (initialLength === players.length) {\n            throw new Error(\"Cannot remove the player. Player not found.\");\n        }\n    }\n\n    this.getNoOfPlayers = () => {\n        return players.length;\n    }\n\n    this.setNoOfTurns = (numberOfTurns) => {\n        noOfTurns = numberOfTurns;\n    }\n\n    this.getNoOfTurns = () => {\n        return noOfTurns;\n    }\n    \n    this.incrementTurn = () => {\n        if (currentTurn < noOfTurns) {\n            currentTurn++;\n        } else {\n            throw new Error(\"Current turn can not be larger than total number of turns.\");\n        }\n    }\n\n    this.resetCurrentTurn = () => {\n        currentTurn = 1;\n    }\n\n    this.getCurrentTurn = () => {\n        return currentTurn;\n    }\n\n    this.getCurrentPlayer = () => {\n        return currentPlayer;\n    }\n\n    this.setCurrentPlayer = (player) => {\n        currentPlayer = player;\n    }\n    \n    this.getWinners = () => {\n        const result = _isDrawInternal();\n        const winners = [];\n\n        players.forEach(p => {\n            if (p === result.highestScore) {\n                winners.push(p);\n            }\n        });\n        return winners;\n\n    }\n\n    this.isDraw = () => {\n        let result = this._isDrawInternal();\n        return result.frequency > 1 ? true : false;\n    }\n\n    this._isDrawInternal = () => {\n        let highestScore = 0;\n        let map = new Map();\n\n        players.forEach(p => {\n            const currScore = p.getScore();\n            highestScore = currScore > highestScore ? currScore : highestScore;\n            //let frequency = map.get(currScore);\n            // if frequency is null/undefined/0/\"\" the next line is false\n            if (map.has(currScore)) {\n                map.set(currScore, map.get(currScore) + 1);\n            } else {\n                map.set(currScore, 1);\n            }\n        });\n      \n        return {\n            highestScore: highestScore,\n            frequency: map.get(highestScore)\n        };\n\n    }\n\n    this.toString = () => {\n        return \"name: \" + name + \", noOfTurns: \" + noOfTurns + \", currTurn: \" + currentTurn + \", currPlayer: \" + currentPlayer +\n            \"\\nplayers: \" + players.toString();\n    }\n} ","import { Player } from \"../modulev2/player-module-v2\";\nimport { Game } from \"../modulev2/game-module-v2\";\n// set constants for number of options, country array\n// vars: options(array which keeps indexes), correctAnswer(index), userAnswer(index),   \n\n\n/* ----------------------- HTML elements -------------------------- */\nlet flagImg = document.getElementById(\"flag\");\nlet first = document.querySelector(\"#options .option:nth-of-type(1) label\");\nlet second = document.querySelector(\"#options .option:nth-of-type(2) label\");\nlet third = document.querySelector(\"#options .option:nth-of-type(3) label\");\nlet firstInput = document.getElementById(\"choice1\");\nlet secondInput = document.getElementById(\"choice2\");\nlet thirdInput = document.getElementById(\"choice3\");\nlet firstCircle = document.getElementById(\"circleOne\");\nlet secondCircle = document.getElementById(\"circleTwo\");\nlet thirdCircle = document.getElementById(\"circleThree\");\nlet answer = document.getElementById(\"answer\");\nlet form = document.querySelector(\"form\");\nlet p1Score = document.querySelector(\"#rightScore\");\nlet p2Score = document.querySelector(\"#leftScore\");\n\nlet p1MatchScore = document.querySelector(\"#p1MatchScore\");\nlet p2MatchScore = document.querySelector(\"#p2MatchScore\");\nlet resetBtn = document.querySelector(\"#resetBtn\");\nlet levelNumber = document.querySelector(\"#levelNumber\");\nlet matchNumber = document.querySelector(\"#matchNumber\");\nlet playersNumber = document.querySelector(\"#playersNumber\");\n\nlet radioBtns = document.querySelectorAll(\"input[type=radio]\");\n// other variables \nconst NUMBER_OF_OPTIONS = 3;\nlet gameNumber = 1;\nconst API_URL = \"https://restcountries.eu/rest/v2/all\"\nlet countryArray;\nlet options = [];\nlet correctAnswer;\nlet next = document.getElementById(\"nextBtn\");\nlet userAnswer;\nlet flagsPerMatch = 2;\nlet nextFlagAllowed = false;\nlet level = 1;\nlet game = new Game(\"Flag game\", flagsPerMatch);\nlet difficulty = \"easy\";\nlet easyFlags = [\"Poland\", \"Netherlands\", \"Indonesia\", \"Saudi Arabia\", \"Mayotte\", \"Antarctica\", \"Israel\", \"Canada\", \"Switzerland\", \"Brazil\", \"Japan\", \"United Kingdom of Great Britain and Northern Ireland\", \"Sweden\",\"Turkey\", \"Germany\", \"United States of America\", \"Spain\", \"United Kingdom\", \"Cyprus\",\"Greece\", \"Austria\", \"Croatia\", \"Italy\", \"Russian Federation\",\"Ireland\", \"Poland\", \"France\", \"China\", \"Norway\",\"Portugal\"];\nlet mediumFlags = [\"Mexico\", \"Georgia\", \"Bosnia and Herzegovina\", \"Macedonia (the former Yugoslav Republic of)\", \"Saint Martin (French part)\", \"Malta\", \"Luxembourg\", \"Bulgaria\", \"Tunisia\", \"Republic of Kosovo\", \"Iraq\", \"India\", \"Egypt\",\"Chile\", \"Uruguay\", \"Belgium\", \"Mongolia\", \"Greenland\", \"Lithuania\",\"Montenegro\", \"Holy See\", \"Viet Nam\", \"Slovakia\", \"Slovenia\", \"Albania\", \"Hungary\", \"Czech Republic\", \"Denmark\", \"Macedonia\", \"Belarus\", \"Ukraine\", \"Estonia\", \"Lithuana\", \"Luxenbourg\", \"Latvia\", \"Romania\"];\n\nconst player1 = new Player(1);\nconst player2 = new Player(2);\ngame.addPlayer(player1);\ngame.addPlayer(player2);\ngame.setCurrentPlayer(player1);\ninit();\ninitGame();\np1Score.classList.add(\"activePlayer\");\n\n\n\nif (localStorage.getItem(\"player1\") === null) {\n    localStorage.setItem('player1', Number(0));\n    localStorage.setItem('player2', Number(0));\n    \n    renderScores()\n} else {\n    renderScores()\n}\n/* -------------------------- Event listeners ---------------------------- */\nform.addEventListener(\"change\", function (event) {\n    nextFlagAllowed = true;\n    next.classList.remove(\"invisible\");\n    next.classList.add(\"visible\");\n\n    disableRadioButtons();\n    let userAnswer = getUserAnswer();\n    renderAnswer(Number(userAnswer) === correctAnswer);\n    changeTurn();\n    gameNumber++;\n    renderScores();\n    event.preventDefault();\n}, false);\n\nnext.addEventListener(\"click\", function () {\n    if (nextFlagAllowed) {\n        reset();\n        nextFlagAllowed = false;\n        next.classList.add(\"invisible\");\n        next.classList.remove(\"visible\");\n\n    }\n});\n\nresetBtn.addEventListener(\"click\", function () {\n    \n    game.resetCurrentTurn();\n    localStorage.setItem('player1', Number(0));\n    localStorage.setItem('player2', Number(0));\n    p1Score.classList.add(\"activePlayer\");\n    p2Score.classList.remove(\"activePlayer\");\n    game.setCurrentPlayer(player1);\n    player1.setScore(0);\n    player2.setScore(0);\n    renderScores();\n});\n\n\nfunction getUserAnswer() {\n    let userAnswer = \"\";\n    for (var i = 0; i < radioBtns.length; i++) {\n        if (radioBtns[i].checked) {\n\n            userAnswer = radioBtns[i].value;\n\n        }\n    }\n    \n\n    return userAnswer;\n}\n\nfunction disableRadioButtons() {\n    firstInput.disabled = true;\n    secondInput.disabled = true;\n    thirdInput.disabled = true;\n}\n\nfunction renderAnswer(userGuessed) {\n    if (userGuessed) {\n        answer.classList.remove(\"red\");\n        answer.classList.add(\"green\");\n        renderResult(\"Correct!\");\n        updateScore();\n    }\n    else {\n        answer.classList.remove(\"green\");\n        answer.classList.add(\"red\");\n        renderResult(\"Inncorect! Correct answer is \" + countryArray[correctAnswer].name);\n    }\n}\n\n/* ------------------------------ main methods --------------------------- */\n\nasync function init() {\n    countryArray = await requestCountryData();\n    reset();\n}\n\nfunction initGame() {\n    console.log(\"Init game\");\n\n\n}\nfunction initNewMatch() {\n    answer.classList.remove(\"red\");\n    answer.classList.remove(\"green\");\n    if (game.isDraw()) {\n        answer.innerHTML = \"It is a draw!!!!\";\n\n    }\n    else {\n        if (player1.getScore() > player2.getScore()) {\n            let score = localStorage.getItem(\"player1\");\n            localStorage.setItem(\"player1\", Number(score) + 1);\n            answer.innerHTML = \"player one has won.\";\n\n        }\n        else {\n            let score = localStorage.getItem(\"player2\");\n            localStorage.setItem(\"player2\", Number(score) + 1);\n            answer.innerHTML = \"player two has won.\";\n        }\n    }\n    p1Score.classList.add(\"activePlayer\");\n    p2Score.classList.remove(\"activePlayer\");\n    player1.setScore(0);\n    player2.setScore(0);\n    renderScores();\n}\nfunction updateScore() {\n    console.log(\"Updating score\");\n    let currPlayer = game.getCurrentPlayer();\n    currPlayer.setScore(currPlayer.getScore() + 1);\n    console.log(\"increasing player score and rendering\");\n}\n\nfunction changeTurn() {\n    if (game.getCurrentTurn() < game.getNoOfTurns()) {\n        game.incrementTurn();\n    } else {\n        if (game.getCurrentPlayer().getId() === player1.getId()) {\n            p1Score.classList.remove(\"activePlayer\");\n            p2Score.classList.add(\"activePlayer\");\n            game.setCurrentPlayer(player2);\n\n        } else {\n            game.setCurrentPlayer(player1);\n            initNewMatch();\n        }\n        game.resetCurrentTurn();\n\n    }\n}\n\nasync function reset() {\n\n    answer.innerHTML = \"\";\n    options = generateOptionsAsIndexes(); // 56, 78, 134\n    correctAnswer = options[0]; // 56\n    shuffle(options);\n    renderCountryNamesOnBtns(extractCountryNames());\n    setFlagUrl(extractFlag(correctAnswer));\n    firstInput.disabled = false;\n    secondInput.disabled = false;\n    thirdInput.disabled = false;\n    firstInput.checked = false;\n    secondInput.checked = false;\n    thirdInput.checked = false;\n}\n\nfunction generateOptionsAsIndexes() {\n    let opt1 = getRandomInt(0, countryArray.length);\n    let opt2 = getRandomInt(0, countryArray.length);\n    let opt3 = getRandomInt(0, countryArray.length);\n    \n    while(opt1 === opt2){\n        opt2 = getRandomInt(0, countryArray.length);\n    }\n    while(opt1 === opt3){\n        opt3 = getRandomInt(0, countryArray.length);\n    }\n    while(opt3 === opt2){\n        opt2 = getRandomInt(0, countryArray.length);\n    }\n    while(isCountryHardEnough(opt1) === false){\n        opt1 = getRandomInt(0, countryArray.length);\n    }\n    return [opt1, opt2, opt3];\n}\n\n/* ------------------------------ heplers ----------------------------- */\nfunction isCountryHardEnough(opt){\n    if(difficulty === \"easy\"){\n        for(let i=0; i<easyFlags.length;i++){\n            if(countryArray[opt].name === easyFlags[i]){\n             return true;   \n            }\n        }\n    }\n    if(difficulty === \"medium\"){\n        for(let i=0; i<mediumFlags.length;i++){\n            if(countryArray[opt].name === mediumFlags[i]){\n             return true;   \n            }\n        }\n    }\n    if(difficulty === \"hard\"){\n        for(let i=0; i<easyFlags.length;i++){\n            if(countryArray[opt].name === easyFlags[i]){\n             return false;   \n            }\n        }\n        for(let i=0; i<mediumFlags.length;i++){\n            if(countryArray[opt].name === mediumFlags[i]){\n             return false;   \n            }\n        }\n        \n        return true;\n    }\n    return false;\n}\nasync function requestCountryData() {\n    try {\n        let response = await fetch(API_URL);\n        let countryArray = await response.json();\n        return countryArray;\n    } catch (error) {\n        console.log(error);\n    }\n}\nfunction renderResult(msg) {\n    answer.innerHTML = msg;\n}\n/**\n * Returns a random number between min (inclusive) and max(exclusive)\n */\nfunction getRandomInt(min, max) {\n    let maxExclusive = true;\n    min = Math.ceil(min);\n    max = maxExclusive ? Math.floor(max) - 1 : Math.floor(max);\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    return random;\n}\n\nfunction renderCountryNamesOnBtns(countryNames) {\n/*     first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name; */\n    first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name;\n    firstInput.value = options[0];\n    secondInput.value = options[1];\n    thirdInput.value = options[2];\n}\n\nfunction setFlagUrl(flag) {\n    flagImg.src = flag;\n}\n\nfunction extractCountryNames() {\n    let names = [];\n    let countryNmb;\n    for (let i = 0; i < options.length; i++) {\n        countryNmb = options[i];\n        names[i] = countryArray[countryNmb].name;\n    }\n    return names;\n}\n\nfunction extractFlag(correctAnswer) {\n    return countryArray[correctAnswer].flag;\n}\nfunction shuffle(array) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nfunction renderScores() {\n    p1Score.innerHTML = player1.getScore() + \"/\" + game.getNoOfTurns();\n    p2Score.innerHTML = \"  :  \" + player2.getScore() + \"/\" + game.getNoOfTurns();\n    p1MatchScore.innerHTML = localStorage.getItem(\"player1\");\n    p2MatchScore.innerHTML = \"  :  \" + localStorage.getItem(\"player2\");\n    levelNumber.innerHTML = level;\n    matchNumber.innerHTML = flagsPerMatch;\n    playersNumber.innerHTML = game.getNoOfPlayers();\n}\n//localStorage.getItem(\"player1\") - match score\n//player1.getScore() -- actual score game.getNoOfTurns()"]}