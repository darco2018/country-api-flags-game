{"version":3,"sources":["module-game/player-module-v2.js","module-game/game-module-v2.js","module-universal/api-data-fetcher.js","module-universal/get-random-int.js","module-view/btn-utills.js","module-country-api/extract-country-names.js","module-game/update-score.js","module-view/render-result.js","module-universal/array-utilities/shuffle.js","module-view/get-user-answer.js","module-universal/array-utilities/hasDuplicates.js","module-country-api/immutable-arrays.js","module-view/set-cursor-type.js","module-persistence/persistence.js","javascripts/index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Player","playerId","id","score","getId","getScore","Number","setScore","playerScore","Error","toString","Game","gameName","numberOfTurns","name","noOfTurns","currentPlayer","undefined","players","currentTurn","getGameName","addPlayer","player","push","removePlayer","initialLength","length","filter","p","getNoOfPlayers","setNoOfTurns","getNoOfTurns","incrementTurn","resetCurrentTurn","getCurrentTurn","getCurrentPlayer","setCurrentPlayer","getWinners","result","_isDrawInternal","winners","forEach","highestScore","isDraw","frequency","map","Map","currScore","has","set","get","getAPIDataAsJsObjects","url","response","fetch","countryArray","json","error","console","log","getRandomInt","min","max","maxExclusive","Math","ceil","floor","random","setRadioButtons","buttonsArray","property","isDisabled","Array","isArray","i","extractElementsProperties","chosenOptions","elementsArray","names","getLevelItemsArrMap","easyItemsMutable","mediumItemsMutable","hardItemsMutable","masterItemsMutable","levelItemsArrMap","easy","medium","hard","master","updateScore","game","currPlayer","renderResult","msg","htmlElem","innerHTML","shuffle","array","sort","getUserAnswer","buttons","userAnswer","checked","value","hasDuplicates","Set","size","getEasyArray","easyArray","getMediumArray","mediumArray","getHardArray","hardArray","getMasterArray","j","masterArray","currCountry","includes","setCursorType","htmlElements","cursorType","style","cursor","Persistence","key","localStorage","getItem","put","setItem","flagImg","document","getElementById","first","querySelector","second","third","topRadioButton","middleRadioButton","bottomRadioButton","answer","form","player1Score","player2Score","opt","player1MatchScore","player2MatchScore","resetBtn","optionsPage","gamePage","levelChoice","radioBtns","querySelectorAll","cursorStuff","playBtn","next","nextDiv","API_URL","player1","player2","opt2","opt3","options","correctAnswer","nextFlagAllowed","difficulty","indexOfAnswer","masterFlagsImmutable","persistence","easyFlagsImmutable","mediumFlagsImmutable","hardFlagsImmutable","level_ItemsArr_Map","slice","devMode","flagsPerMatch","round","init","addEventListener","setQuestionNumber","currPlayerWhenChangeLVL","renderCurrentMatchScore","reset","event","classList","remove","add","renderAnswer","changeTurn","preventDefault","contains","persistTotalMatchesScore","renderTottalMatches","setupPlayers","initNewMatch","renderMatchResult","generateOptionsAsIndexes","renderCountryNamesOnBtns","setFlagUrl","extractFlag","optionsRadioButtons","checkIfOutOfFlags","difficultyCoutriesObj","eval","innerText","flag","src","generateOtherCountries","difficultyCountriesObj","mutableArray","randomIndex","opt1","splice","renderCurrentMatchEndMsg","winner","userGuessed","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","appendChild","createElement","stackTrace","getParents","modules","parents","k","d","dep","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"javascripts.ea2fe77b.js","sourceRoot":"../src","sourcesContent":["export function Player(playerId){\n    // 1\n    const id = playerId;\n    let score = 0;\n\n\n    this.getId = () => {\n        return id;\n    }\n  \n    this.getScore = () => {\n        return Number(score);\n    }\n    // 2 3 \n    this.setScore = (playerScore) => {\n        if (playerScore < 0) {\n            throw new Error(\"Score cannot be negative\");\n        }\n        score = Number(playerScore);\n    }\n\n    this.toString = () => {\n        return \"id: \" + id + \", score: \" + score;\n    };\n}","import { Player } from \"./player-module-v2\";\n\n\n\nexport function Game(gameName, numberOfTurns) {\n    const name = gameName;\n    let noOfTurns = numberOfTurns;\n\n    let currentPlayer = undefined;\n    let players = [];\n    let currentTurn = 1;\n\n    this.getGameName = () => {\n        return name;\n    }\n\n    this.addPlayer = (player) => {\n        players.push(player);\n    }\n\n    this.removePlayer = (player) => {\n        let initialLength = players.length;\n        players = players.filter(p => p.id !== player.id);\n\n        if (initialLength === players.length) {\n            throw new Error(\"Cannot remove the player. Player not found.\");\n        }\n    }\n\n    this.getNoOfPlayers = () => {\n        return players.length;\n    }\n\n    this.setNoOfTurns = (numberOfTurns) => {\n        noOfTurns = numberOfTurns;\n    }\n\n    this.getNoOfTurns = () => {\n        return noOfTurns;\n    }\n    \n    this.incrementTurn = () => {\n        if (currentTurn < noOfTurns) {\n            currentTurn++;\n        } else {\n            throw new Error(\"Current turn can not be larger than total number of turns.\");\n        }\n    }\n\n    this.resetCurrentTurn = () => {\n        currentTurn = 1;\n    }\n\n    this.getCurrentTurn = () => {\n        return currentTurn;\n    }\n\n    this.getCurrentPlayer = () => {\n        return currentPlayer;\n    }\n\n    this.setCurrentPlayer = (player) => {\n        currentPlayer = player;\n    }\n    \n    this.getWinners = () => {\n        const result = _isDrawInternal();\n        const winners = [];\n\n        players.forEach(p => {\n            if (p === result.highestScore) {\n                winners.push(p);\n            }\n        });\n        return winners;\n\n    }\n\n    this.isDraw = () => {\n        let result = this._isDrawInternal();\n        return result.frequency > 1 ? true : false;\n    }\n\n    this._isDrawInternal = () => {\n        let highestScore = 0;\n        let map = new Map();\n\n        players.forEach(p => {\n            const currScore = p.getScore();\n            highestScore = currScore > highestScore ? currScore : highestScore;\n            //let frequency = map.get(currScore);\n            // if frequency is null/undefined/0/\"\" the next line is false\n            if (map.has(currScore)) {\n                map.set(currScore, map.get(currScore) + 1);\n            } else {\n                map.set(currScore, 1);\n            }\n        });\n      \n        return {\n            highestScore: highestScore,\n            frequency: map.get(highestScore)\n        };\n\n    }\n\n    this.toString = () => {\n        return \"name: \" + name + \", noOfTurns: \" + noOfTurns + \", currTurn: \" + currentTurn + \", currPlayer: \" + currentPlayer +\n            \"\\nplayers: \" + players.toString();\n    }\n} ","export async function getAPIDataAsJsObjects(url) {\n    try {\n        const response = await fetch(url);\n        const countryArray = await response.json();\n        //console.log(countryArray);\n        return countryArray;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n","/**\n * Returns a random number between min (inclusive) and max(exclusive)\n */\nexport function getRandomInt(min, max) {\n    const maxExclusive = true;\n    min = Math.ceil(min);\n    max = maxExclusive ? Math.floor(max) - 1 : Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n    ;\n}\n","export function setRadioButtons(buttonsArray, property, isDisabled) {\n    if (typeof isDisabled != \"boolean\"){\n        throw Error(\"Third argument must be a boolean.\");\n      }\n     \n    if (Array.isArray(buttonsArray)) {\n        let i;\n        switch(property){\n            case \"disabled\":\n                for (i = 0; i < buttonsArray.length; i++) {\n                    buttonsArray[i][property] = isDisabled;\n                }\n                break;\n            case \"checked\":\n                for (i = 0; i < buttonsArray.length; i++) {\n                    buttonsArray[i][property] = isDisabled;\n                }\n                break;\n            default:\n                throw Error(\"Second argument for setRadioButtons function must be equal to checked or disabled\");\n        }\n    } else {\n        throw Error(\"First argument must be an Array.\");\n\n    }\n\n}\n","export function extractElementsProperties(chosenOptions, elementsArray, property) {\n    const names = [];\n    if (Array.isArray(chosenOptions) && Array.isArray(elementsArray)) {\n        for (let i = 0; i < chosenOptions.length; i++) {\n            names[i] = elementsArray[chosenOptions[i]].property;\n        }\n        return names;\n    } else {\n        throw Error(\"chosenOptions or elementsArray is not an array.\");\n    }\n}\n\n\nexport function getLevelItemsArrMap(easyItemsMutable, mediumItemsMutable, hardItemsMutable, masterItemsMutable) {\n\n    if (Array.isArray(easyItemsMutable) && Array.isArray(mediumItemsMutable) && Array.isArray(hardItemsMutable) && Array.isArray(masterItemsMutable)) {\n        let levelItemsArrMap = {\n            easy: easyItemsMutable,\n            medium: mediumItemsMutable,\n            hard: hardItemsMutable,\n            master: masterItemsMutable\n        };\n        return levelItemsArrMap;\n    } else {\n        throw Error(\"All arguments to getLevelItemsArrMap() must be arrays.\");\n    }\n    \n}","\nexport function updateScore(game) {\n    const currPlayer = game.getCurrentPlayer();\n    currPlayer.setScore(currPlayer.getScore() + 1);\n}\n","// xxx\nexport function renderResult(msg, htmlElem) {\n    htmlElem.innerHTML = msg;\n}\n","export function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n}\n","export function getUserAnswer(buttons) {\n    let userAnswer = \"\";\n    for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].checked) {\n            userAnswer = buttons[i].value;\n        }\n    }\n    return userAnswer;\n}\n","export function hasDuplicates(array) {\n    if (new Set(array).size !== array.length) {\n        throw Error(\"Your Array: \" + array + \" has duplicates.\");\n    }\n}\n","import { hasDuplicates } from \"../module-universal/array-utilities/hasDuplicates\";\n\nexport function getEasyArray(){\n    let easyArray = [\"Korea (Republic of)\", \"Netherlands\", \"Indonesia\",\n    \"Mayotte\", \"Antarctica\", \"Israel\", \"Canada\", \"Switzerland\", \"Brazil\", \"Japan\",\n    \"United Kingdom of Great Britain and Northern Ireland\", \"Sweden\", \"Turkey\", \"Germany\", \"United States of America\",\n    \"Spain\", \"Cyprus\", \"Slovakia\", \"Greece\", \"Austria\", \"Croatia\", \"Italy\", \"Denmark\", \"Russian Federation\",\n    \"Poland\", \"France\", \"China\", \"Uruguay\", \"Belgium\", \"Czech Republic\", \"Ukraine\", \"Holy See\", \"Norway\", \"Portugal\", \"Sudan\", \"Finland\", \"Nepal\", \"New Zeland\", \"Iceland\", \"United States Minor Outlying Islands\"];\n    hasDuplicates(easyArray);\n    return easyArray;\n}   \nexport function getMediumArray(){\n    let mediumArray = [\"Australia\", \"Puerto Rico\", \"Korea (Democratic People's Republic of)\",\n    \"Mexico\", \"Macedonia (the former Yugoslav Republic of)\",\n    \"Saint Martin (French part)\", \"Malta\", \"Luxembourg\", \"Ireland\", \"Bulgaria\", \"Republic of Kosovo\", \"Iraq\", \"India\",\n    \"Egypt\", \"Chile\", \"Mongolia\", \"Lithuania\", \"Montenegro\", \"Viet Nam\", \"Jamaica\",\n    \"Slovenia\", \"Albania\", \"Hungary\", \"Belarus\",\n    \"Estonia\", \"Romania\", \"Saudi Arabia\", \"Nicaragua\", \"Venezuela (Bolivarian Republic of)\", \"Syrian Arab Republic\", \"Serbia\", \"Hong Kong\", \"Argentina\"];\n    hasDuplicates(mediumArray);\n    return mediumArray;\n}  \nexport function getHardArray(){\n    let hardArray = [\"Tunisia\", \"Liechtenstein\", \"Bosnia and Herzegovina\", \"Greenland\", \"Kenya\", \"Georgia\", \"Thailand\", \"Panama\", \"Jersey\", \"Bhutan\", \"Cambodia\", \"Tobago\",\n    \"Kuwait\", \"Haiti\", \"Algieria\", \"Lebanon\", \"Sri Lanka\", \"Libya\", \"Colombia\", \"Ecuador\", \"Paraguay\", \"Afghanistan\", \"San Marino\", \"Sudan\", \"Andora\", \"Senegal\", \"Somalia\",\n    \"Turkmenistan\", \"Pakistan\", \"Iran\", \"Peru\", \"Cuba\", \"Honduras\", \"Jordan\", \"Uzbekistan\", \"South Georgia and the South Sandwich Islands\", \"Papua New Guinea\", \"Cook Islands\",\n    \"Virgin Islands (British)\", \"Heard Island and McDonald Islands\", \"Western Sahara\", \"Åland Islands\", \"French Southern Territories\", \"Nigeria\"];\n    hasDuplicates(hardArray);\n    return hardArray;\n}  \nexport function getMasterArray(easyArray, mediumArray, hardArray, countryArray) {\n    let j = 0;\n    let masterArray = [];\n    let currCountry;\n    for (let i = 0; i < countryArray.length; i++) {\n        currCountry = countryArray[i].name;\n        if (!easyArray.includes(currCountry) &&\n            !mediumArray.includes(currCountry) &&\n            !hardArray.includes(currCountry)) {\n            masterArray[j] = currCountry;\n            j++;\n        }\n    }\n    hasDuplicates(masterArray);\n    return masterArray;\n}","export function setCursorType(htmlElements, cursorType) {\n    if (typeof cursorType != \"string\") {\n        throw Error(\"Second argument must be a string.\");\n    }\n    let i;\n    for (i = 0; i < htmlElements.length; i++) {\n        htmlElements[i].style.cursor = cursorType;\n    }\n}\n","\nexport function Persistence() {\n    this.get = (key) => {\n        return localStorage.getItem(key);\n    }\n    this.put = (key, value) => {\n        localStorage.setItem(key, value);\n     }\n}","/* eslint no-console: 1 */\n\nimport { Player } from \"../module-game/player-module-v2\";\nimport { Game } from \"../module-game/game-module-v2\";\nimport { getAPIDataAsJsObjects } from \"../module-universal/api-data-fetcher\";\nimport { getRandomInt } from \"../module-universal/get-random-int\";\nimport { setRadioButtons } from \"../module-view/btn-utills\";\nimport { extractElementsProperties } from \"../module-country-api/extract-country-names\";\nimport { updateScore } from \"../module-game/update-score\";\nimport { renderResult } from \"../module-view/render-result\";\nimport { shuffle } from \"../module-universal/array-utilities/shuffle\";\nimport { getUserAnswer } from \"../module-view/get-user-answer\";\nimport { getLevelItemsArrMap } from \"../module-country-api/extract-country-names\";\nimport { getEasyArray, getMediumArray, getHardArray, getMasterArray } from \"../module-country-api/immutable-arrays\";\nimport { setCursorType } from \"../module-view/set-cursor-type\";\nimport { Persistence } from \"../module-persistence/persistence\";\n\n/* ----------------------- HTML elements -------------------------- */\nconst flagImg = document.getElementById(\"flag\");\nconst first = document.querySelector(\"#options .option:nth-of-type(1) label\");\nconst second = document.querySelector(\"#options .option:nth-of-type(2) label\");\nconst third = document.querySelector(\"#options .option:nth-of-type(3) label\");\nconst topRadioButton = document.getElementById(\"choice1\");\nconst middleRadioButton = document.getElementById(\"choice2\");\nconst bottomRadioButton = document.getElementById(\"choice3\");\nconst answer = document.getElementById(\"answer\");\nconst result = document.getElementById(\"result\");\nconst form = document.querySelector(\"form\");\nconst player1Score = document.querySelector(\"#rightScore\");\nconst player2Score = document.querySelector(\"#leftScore\");\nconst opt = document.querySelector(\"#settings\");\nconst player1MatchScore = document.querySelector(\"#p1MatchScore\");\nconst player2MatchScore = document.querySelector(\"#p2MatchScore\");\nconst resetBtn = document.querySelector(\"#resetBtn\");\nconst optionsPage = document.querySelector(\"#optionsPage\");\nconst gamePage = document.querySelector(\"#gamePage\");\nconst levelChoice = document.querySelector(\"#level-select\");\nconst radioBtns = document.querySelectorAll(\"input[type=radio]\");\nconst cursorStuff = document.querySelectorAll(\".pointer\");\nconst playBtn = document.querySelector(\"#play\");\nconst next = document.getElementById(\"nextBtn\");\nconst nextDiv = document.getElementById(\"nextBtnDiv\");\n\n/* -----------------------  other variables  -------------------------- */\nconst API_URL = \"https://restcountries.eu/rest/v2/all\";\nconst player1 = new Player(1);\nconst player2 = new Player(2);\nlet opt2;\nlet opt3;\nlet countryArray;\nlet options = [];\nlet correctAnswer;\nlet nextFlagAllowed = false;\nlet difficulty = \"medium\";\nlet indexOfAnswer = 0;\nlet masterFlagsImmutable = [];\nconst persistence = new Persistence();\nconst easyFlagsImmutable = getEasyArray();\nconst mediumFlagsImmutable = getMediumArray();\nconst hardFlagsImmutable = getHardArray();\nconst level_ItemsArr_Map = getLevelItemsArrMap(easyFlagsImmutable.slice(), mediumFlagsImmutable.slice(), hardFlagsImmutable.slice(), masterFlagsImmutable.slice());\nconst devMode = false;\nlet flagsPerMatch;\nif (devMode == true){\n  flagsPerMatch = 3;\n}else{\n  flagsPerMatch = Math.round((mediumFlagsImmutable.length - 1) / 2);\n}\n\nlet game = new Game(\"Flag game\", flagsPerMatch);\n\n/* -----------------------  logic  -------------------------- */\n\ninit();\n\n/* -------------------------- Event listeners ---------------------------- */\nlevelChoice.addEventListener(\"change\", function () {\n    difficulty = levelChoice.value;\n    flagsPerMatch = setQuestionNumber();\n    const currPlayerWhenChangeLVL = game.getCurrentPlayer();\n    game = new Game(\"Flag game\", flagsPerMatch);\n    game.setCurrentPlayer(currPlayerWhenChangeLVL);\n    renderCurrentMatchScore();\n    reset();\n});\n\nform.addEventListener(\"change\", function (event) {\n    nextFlagAllowed = true;\n    next.classList.remove(\"invisible\");\n    next.classList.add(\"visible\");\n    setRadioButtons([topRadioButton, middleRadioButton, bottomRadioButton], \"disabled\", true);\n    const userAnswer = getUserAnswer(radioBtns);\n    renderAnswer(Number(userAnswer) === correctAnswer);\n    changeTurn();\n    renderCurrentMatchScore();\n    event.preventDefault();\n}, false);\n\nnext.addEventListener(\"click\", function () {\n    if (nextDiv.classList.contains(\"bigMargin\") === true) {\n        nextDiv.classList.remove(\"bigMargin\");\n        nextDiv.classList.add(\"normalMargin\");\n    }\n    if (nextFlagAllowed) {\n        reset();\n        nextFlagAllowed = false;\n        next.classList.add(\"invisible\");\n        next.classList.remove(\"visible\");\n    }\n});\n\nopt.addEventListener(\"click\", function () {\n    optionsPage.classList.remove(\"invisible\");\n    gamePage.classList.remove(\"visible\");\n    gamePage.classList.add(\"invisible\");\n    optionsPage.classList.add(\"visible\");\n    playBtn.classList.remove(\"bold\");\n    opt.classList.add(\"bold\");\n});\n\nplayBtn.addEventListener(\"click\", function () {\n    opt.classList.remove(\"bold\");\n    playBtn.classList.add(\"bold\");\n    gamePage.classList.remove(\"invisible\");\n    optionsPage.classList.add(\"invisible\");\n    optionsPage.classList.remove(\"visible\");\n    gamePage.classList.add(\"visible\");\n});\n\nresetBtn.addEventListener(\"click\", function () {\n    game.resetCurrentTurn();\n    persistTotalMatchesScore();\n\n    player1Score.classList.add(\"activePlayer\");\n    player2Score.classList.remove(\"activePlayer\");\n    game.setCurrentPlayer(player1);\n    player1.setScore(0);\n    player2.setScore(0);\n    renderTottalMatches();\n    renderCurrentMatchScore();\n});\n\n/* ------------------------------ main methods --------------------------- */\n\nasync function init(){\n    countryArray = await getAPIDataAsJsObjects(API_URL);\n    masterFlagsImmutable = getMasterArray(easyFlagsImmutable, mediumFlagsImmutable, hardFlagsImmutable, countryArray);\n    setupPlayers();\n    reset();\n    \n    // view\n    renderTottalMatches();\n    setCursorType(cursorStuff, \"pointer\");\n    player1Score.classList.add(\"activePlayer\");\n    optionsPage.classList.add(\"invisible\");\n    playBtn.classList.add(\"bold\");\n    \n    if (persistence.get(\"player1\") === null) {\n        persistTotalMatchesScore();\n    }\n    renderCurrentMatchScore();\n\n    function setupPlayers() {\n        game.addPlayer(player1);\n        game.addPlayer(player2);\n        game.setCurrentPlayer(player1);\n    }\n}\nfunction persistTotalMatchesScore() {\n    persistence.put(\"player1\", Number(0));\n    persistence.put(\"player2\", Number(0));\n}\n\nfunction initNewMatch() {\n    nextDiv.classList.remove(\"normalMargin\");\n    nextDiv.classList.add(\"bigMargin\");\n    renderMatchResult();\n    player1Score.classList.add(\"activePlayer\");\n    player2Score.classList.remove(\"activePlayer\");\n    player1.setScore(0);\n    player2.setScore(0);\n    renderCurrentMatchScore();\n    renderTottalMatches();\n}\n\nfunction changeTurn() {\n    if (game.getCurrentTurn() < game.getNoOfTurns()) {\n        game.incrementTurn();\n    } else {\n        if (game.getCurrentPlayer().getId() === player1.getId()) {\n            player1Score.classList.remove(\"activePlayer\");\n            player2Score.classList.add(\"activePlayer\");\n            game.setCurrentPlayer(player2);\n\n        } else {\n            game.setCurrentPlayer(player1);\n            initNewMatch();\n        }\n        game.resetCurrentTurn();\n\n    }\n}\n\nasync function reset() {\n    result.innerHTML = \"\";\n    answer.innerHTML = \"\";\n    options = generateOptionsAsIndexes(level_ItemsArr_Map); // np 56, 78, 134\n    correctAnswer = options[0]; // 56\n    shuffle(options);\n    renderCountryNamesOnBtns(extractElementsProperties(options, countryArray, \"name\"));\n    setFlagUrl(extractFlag(correctAnswer));\n    const optionsRadioButtons = [topRadioButton, middleRadioButton, bottomRadioButton];\n    setRadioButtons(optionsRadioButtons, \"disabled\", false);\n    setRadioButtons(optionsRadioButtons, \"checked\", false);\n}\n/* ------------------------------ heplers ----------------------------- */\nfunction checkIfOutOfFlags(difficultyCoutriesObj) {\n    if (difficultyCoutriesObj[difficulty].length < 2) {\n        difficultyCoutriesObj[difficulty] = eval(difficulty + \"FlagsImmutable\").slice();\n    }\n}\nfunction renderCountryNamesOnBtns() {\n    first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name;\n    topRadioButton.value = options[0];\n    middleRadioButton.value = options[1];\n    bottomRadioButton.value = options[2];\n}\n\n\n\nfunction setFlagUrl(flag) {\n    flagImg.src = flag;\n}\n\nfunction extractFlag(correctAnswer) {\n    return countryArray[correctAnswer].flag;\n}\n\nfunction renderCurrentMatchScore() {\n    player1Score.innerHTML = player1.getScore() + \"/\" + game.getNoOfTurns();\n    player2Score.innerHTML = \"  :  \" + player2.getScore() + \"/\" + game.getNoOfTurns();\n\n}\nfunction renderTottalMatches() {\n    player1MatchScore.innerHTML = persistence.get(\"player1\");\n    player2MatchScore.innerHTML = \"  :  \" + persistence.get(\"player2\");\n}\n\nfunction generateOtherCountries() {\n    opt2 = getRandomInt(0, countryArray.length);\n    opt3 = getRandomInt(0, countryArray.length);\n}\n\nfunction generateOptionsAsIndexes(difficultyCountriesObj) {\n    generateOtherCountries();\n    checkIfOutOfFlags(difficultyCountriesObj);\n    const mutableArray = difficultyCountriesObj[difficulty];\n\n    const randomIndex = getRandomInt(0, mutableArray.length);\n    const opt1 = mutableArray[randomIndex];\n    mutableArray.splice(randomIndex, 1);\n    for (let i = 0; i < countryArray.length; i++) {\n        if (opt1 === countryArray[i].name) {\n            indexOfAnswer = i;\n        }\n    }\n    while (opt2 === indexOfAnswer || indexOfAnswer === opt3 || opt2 === opt3) {\n        generateOtherCountries();\n    }\n    return [indexOfAnswer, opt2, opt3];\n}\n\nfunction renderMatchResult() {\n    if (game.isDraw()) {\n        result.innerHTML = \"It is a draw!!!! No more \" + difficulty + \" flags availeble for this level. Play again with the same flags or change difficulty in the options.\";\n    }\n    else {\n\n        if (player1.getScore() > player2.getScore()) {\n            renderCurrentMatchEndMsg(\"player1\");\n        }\n        else {\n            renderCurrentMatchEndMsg(\"player2\");\n        }\n    }\n}\nfunction renderCurrentMatchEndMsg(winner) {\n    const score = persistence.get(winner);\n    persistence.put(winner, Number(score) + 1); // We persist only total matches, not current score\n    result.innerHTML = \"player \" + ((winner === \"player1\") ? \"one\" : \"two\") + \" has won. \" + \"No more \" + difficulty + \" flags availeble for this level. Play again with the same flags or change difficulty in the options.\";\n}\nconst setQuestionNumber = () => Math.round((eval(difficulty + \"FlagsImmutable\").length - 1) / 2);\n\nfunction renderAnswer(userGuessed) {\n    if (userGuessed) {\n        answer.classList.remove(\"red\");\n        answer.classList.add(\"green\");\n        renderResult(\"Correct!\", answer);\n        updateScore(game);\n    }\n    else {\n        answer.classList.remove(\"green\");\n        answer.classList.add(\"red\");\n        renderResult(\"Inncorect! Correct answer is \" + countryArray[correctAnswer].name, answer);\n    }\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}