{"version":3,"sources":["modulev2/player-module-v2.js","modulev2/game-module-v2.js","javascripts/index.js"],"names":["Player","playerId","id","score","getId","getScore","Number","setScore","playerScore","Error","toString","Game","gameName","numberOfTurns","name","noOfTurns","currentPlayer","undefined","players","currentTurn","getGameName","addPlayer","player","push","removePlayer","initialLength","length","filter","p","getNoOfPlayers","setNoOfTurns","getNoOfTurns","incrementTurn","resetCurrentTurn","getCurrentTurn","getCurrentPlayer","setCurrentPlayer","getWinners","result","_isDrawInternal","winners","forEach","highestScore","isDraw","frequency","map","Map","currScore","has","set","get","flagImg","document","getElementById","first","querySelector","second","third","firstInput","secondInput","thirdInput","firstCircle","secondCircle","thirdCircle","answer","form","p1Score","p2Score","opt","p1MatchScore","p2MatchScore","resetBtn","levelNumber","matchNumber","playersNumber","optionsPage","gamePage","back","levelChoice","radioBtns","querySelectorAll","playBtn","NUMBER_OF_OPTIONS","gameNumber","opt2","opt3","API_URL","countryArray","options","correctAnswer","next","userAnswer","flagsPerMatch","nextFlagAllowed","level","game","difficulty","indexOfAnswer","easyFlagsImmutable","mediumFlagsImmutable","easyFlagsMutable","slice","mediumFlagsMutable","hardFlagsMutable","hardFlagsImmutable","currentlyUnavailableFlags","player1","player2","init","initGame","classList","add","localStorage","getItem","setItem","renderScores","j","addEventListener","event","value","reset","remove","disableRadioButtons","getUserAnswer","renderAnswer","changeTurn","preventDefault","i","checked","disabled","userGuessed","renderResult","updateScore","requestCountryData","includes","console","log","initNewMatch","innerHTML","currPlayer","generateOptionsAsIndexes","shuffle","renderCountryNamesOnBtns","extractCountryNames","setFlagUrl","extractFlag","isCountryHardEnough","response","fetch","json","error","msg","getRandomInt","min","max","maxExclusive","Math","ceil","floor","random","countryNames","innerText","flag","src","names","countryNmb","array","temp","generateOtherCountries","opt1","index","splice"],"mappings":";;AEAA;;AACA;;AACA;AACA,ADHA,ADAO,SAASA,MAAT,CAAgBC,QAAhB,EAAyB;AAC5B;AEKJ,ADFO,ADFH,QAAMC,CCEMS,CDFJ,GCEL,ADFQV,CCEMW,ODFjB,CCEG,EAAwBC,aAAxB,EAAuC;ACG9C,ADFI,ADFA,IEIAsC,EFJIhD,ECEEW,GCEC,AFJE,CCEC,ECEAsC,AFJE,CCECxC,ADFb,OEIkB,CAACyC,ADFnB,cCEU,CAAwB,MAAxB,CAAd;AACA,ADFI,ICEAC,EDFIvC,GCEC,GAAGqC,GDFK,GAAGvC,ECEA,CAAC0C,UDFjB,GCEQ,CAAuB,uCAAvB,CAAZ;AACA,ADDI,ADFA,IEGAC,EDDIxC,CDFCZ,GEGC,EFHN,CEGSgD,EFHI,ICEI,ECCA,AFHE,CEGDG,ADDEtC,SAApB,ICCS,CAAuB,uCAAvB,CAAb;AACA,ADDI,ADFI,IEGJwC,EDDIvC,GCCC,EFHMhB,CEGHkD,CDDG,ADFP,GCEU,EAAd,ECCgB,CAACG,aAAT,CAAuB,uCAAvB,CAAZ;AACA,ADDI,ADFC,GAFD,CEKAG,EDDIvC,QCCM,GAAGiC,ADDE,GAAG,CAAlB,ICCqB,CAACC,cAAT,CAAwB,SAAxB,CAAjB;AACA,IAAIM,WAAW,GAAGP,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB;AACA,ADDI,ADFA,IEGAO,GDDKxC,ADFAf,OEGK,CFHV,EEGa+C,CDDb,ADFgB,GCEG,GDFG,CEGD,CAACC,CDDG,aCCZ,CAAwB,SAAxB,CAAjB;AACA,ADDQ,ADFA,IEGJQ,ODDW/C,ADFAR,IEGA,ADDP,EDFa,CEGH8C,AFHIjD,KAAD,CAAb,EEGkB,CAACkD,cAAT,CAAwB,WAAxB,CAAlB;AACA,ADDK,ADFA,GCAD,ADFA,CEKAS,AFf4B,CAa5B,WEEY,GAAGV,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAnB;AACA,IAAIU,WAAW,GAAGX,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AACA,ADDI,ICCAW,GDDK3C,GCCC,GAAG+B,GDDT,GAAkB9B,ECCD,CAAC+B,GDDD,IAAY,OCCpB,CAAwB,QAAxB,CAAb;AACA,ADDQnC,ADHJ,IEIAoB,ADDIpB,GDHCX,GEIC,CDDK,CAACgB,CCCH6B,EFJT,CCGI,CAAa9B,CDHAd,GEIA,CAAC6C,CDDd,MDHY,IAAiB,GEIxB,CAAwB,QAAxB,CAAb;AACA,ADDK,ADHG,GCCJ,CCGAY,IAAI,AFJIzD,GEID4C,QAAQ,AFJI,CEIHG,EFJM,CAAlB,EAAqB,QEIlB,CAAuB,MAAvB,CAAX;AACA,AFJY,IEIRW,OAAO,CFJO,EEIJd,EFJQ3C,KAAJ,CEII,AFJM,CEIL8C,aAAT,CAAuB,WFJnB,CAAN,CEIE,CAAd;AACA,ADDI,ADHK,IEILY,GDDK3C,ICCE,GAAG4B,KDDV,GCCkB,ADDG9B,CCCFiC,KDDC,IAAY,ICCtB,CAAuB,YAAvB,CAAd;AACA,ADDQ,ICCJa,GAAG,CDDK3C,ECCF2B,QAAQ,CAACG,EDDM,GAAGrC,OAAO,CCCzB,ADD0BQ,CCCH,KDDzB,MCCE,CAAV;AACA,ADDQR,ADJAf,IEKJkE,ADDInD,ADJAf,KAAK,ECIE,CDJCG,ECIEY,ECCF,EFLM,CEKHkC,AFLI5C,ECIE,CAACmB,KCCC,CAAC4B,ADDV,CAAe3B,CAAC,ADJZ,CAAd,GCI8BA,CAAC,CAAC1B,EAAF,GCCnB,CAAuB,CDDKoB,MAAM,CAACpB,EAApC,CAAV,ICCW,CAAnB;AACA,AFLK,GALD,CEUAoE,YAAY,GAAGlB,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAAnB;AACA,ADDQ,ICCJgB,IDDQ9C,ICCA,GAAG2B,MDDU,ECCF,CAACG,EDDMrC,OAAO,CAACQ,GCCvB,CAAuB,EDD9B,EAAsC,OCC/B,CAAf;AACA,ADDY,ADJR,IEKA8C,GFLK9D,KCIS,GCCH,AFLX,CCIkBD,ECCJ2C,AFLE,GCIF,CAAU,EDJF,EEKA,CAACG,aAAT,CAAuB,cAAvB,CAAlB,WDDkB,CAAN;ACEZ,ADDS,ADJD,IEKJkB,OFLW,IEKA,GAAGrB,EFLMlD,EAAT,GAAc,CEKH,CAACqD,SFLZ,GAA4BpD,CEKzB,CAAuB,GFLjC,WEKU,CAAlB;AACA,ADDK,ADJA,GCHD,ADCA,CEOAuE,aAAa,GAAGtB,QAAQ,CAACG,aAAT,CAAuB,gBAAvB,CAApB;AACA,AFLC,IEKGoB,WAAW,GAAGvB,QAAQ,CAACG,aAAT,CAAuB,cAAvB,CAAlB;AACA,ADDI,ICCAqB,GDDK/C,KCCG,GAAGuB,MDDX,ECCmB,CAACG,ADDE,MAAM,OCCjB,CAAuB,WAAvB,CAAf;AACA,ADDQ,ICCJsB,IAAI,GAAGzB,ADDIlC,OAAO,CCCH,ADDIQ,CCCH6B,KDDZ,QCCG,CAAuB,aAAvB,CAAX;AACA,ADDK,GAFD,CCGAuB,WAAW,GAAG1B,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAAlB;AACA,IAAIwB,SAAS,GAAG3B,QAAQ,CAAC4B,gBAAT,CAA0B,mBAA1B,CAAhB;AACA,ADDI,ICCAC,GDDKnD,ICCE,GAAGsB,KDDV,GCCkB,ADDGvC,CCCF0C,YDDC,CCCV,CAAuB,EDDM,KCC7B,CAAd,EACA;ADDQxC,IAAAA,SAAS,GAAGF,aAAZ;ACER,ADDK,GAFD,GCGEqE,iBAAiB,GAAG,CAA1B;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,ADDI,ICCAC,GDDKrD,CCCT,WDDI,GAAoB,MAAM;ACE9B,ADDQ,ICCJsD,IAAJ,GDDetE,SAAP;ACER,ADDK,GAFD,GCGEuE,OAAO,GAAG,sCAAhB;AACA,IAAIC,YAAJ;AACA,ADDI,ICCAC,GDDKxD,ICCE,GAAG,EAAd,IDDI,GAAqB,MAAM;ACE/B,ADDQ,ICCJyD,IDDQtE,SCCZ,EDDuB,GAAGJ,SAAlB,EAA6B;ACErC,ADDYI,ICCRuE,EDDQvE,ECCJ,GAAGiC,MDDY,ECCJ,CAACC,cAAT,CAAwB,SAAxB,CAAX;AACA,ADDS,ICCLsC,CDHI,MAEO,GCCf;AACA,ADDY,ICCRC,QDDc,IAAInF,CCCL,GAAG,CAApB,ADDkB,CAAU,4DAAV,CAAN;ACEZ,ADDS,ICCLoF,eAAe,GAAG,KAAtB;AACA,ADDK,GAND,CCOAC,KAAK,GAAG,QAAZ;AACA,IAAIC,IAAI,GAAG,IAAIpF,iBAAJ,CAAS,WAAT,EAAsBiF,aAAtB,CAAX;AACA,ADDI,ICCAI,GDDK/D,OCCK,GAAG,MDDb,ECCJ,CDD4B,MAAM;ACElC,ADDQd,ICCJ8E,ADDI9E,WAAW,ECCF,CDDK,CAAd,CCCY,CAApB;AACA,ADDK,GAFD,CCGA+E,kBAAkB,GAAG,CAAC,qBAAD,EAAwB,WAAxB,EAAqC,aAArC,EAAoD,WAApD,EAAiE,cAAjE,EACzB,SADyB,EACd,YADc,EACA,QADA,EACU,QADV,EACoB,aADpB,EACmC,QADnC,EAC6C,OAD7C,EAEzB,sDAFyB,EAE+B,QAF/B,EAEwC,QAFxC,EAEkD,SAFlD,EAE6D,0BAF7D,EAGzB,OAHyB,EAGhB,QAHgB,EAGP,QAHO,EAGG,SAHH,EAGc,SAHd,EAGyB,OAHzB,EAGkC,oBAHlC,EAGuD,SAHvD,EAIzB,QAJyB,EAIf,QAJe,EAIL,OAJK,EAII,QAJJ,EAIa,UAJb,CAAzB;AAKA,IAAIC,oBAAoB,GAAG,CAAC,eAAD,EAAkB,UAAlB,EAA8B,aAA9B,EAA6C,yCAA7C,EAAwF,OAAxF,EAC3B,QAD2B,EACjB,SADiB,EACN,wBADM,EACoB,6CADpB,EAE3B,4BAF2B,EAEG,OAFH,EAEY,YAFZ,EAE0B,UAF1B,EAEsC,SAFtC,EAEiD,oBAFjD,EAEuE,MAFvE,EAE+E,OAF/E,EAG3B,OAH2B,EAGnB,OAHmB,EAGV,SAHU,EAGC,SAHD,EAGY,UAHZ,EAGwB,WAHxB,EAGqC,WAHrC,EAGiD,YAHjD,EAG+D,UAH/D,EAG2E,UAH3E,EAI3B,UAJ2B,EAIf,UAJe,EAIH,SAJG,EAIQ,SAJR,EAImB,gBAJnB,EAIqC,SAJrC,EAIgD,WAJhD,EAI6D,SAJ7D,EAIwE,SAJxE,EAK3B,SAL2B,EAKhB,UALgB,EAKJ,YALI,EAKU,QALV,EAKoB,SALpB,CAA3B;AAMA,ADVI,ICUAC,GDVKlE,aCUW,CDVhB,ECUmBgE,CDVG,MAAM,WCUS,CAACG,KAAnB,EAAvB;AACA,ADVQ,ICUJC,ODVWnF,WCUO,ADVd,GCUiBgF,oBAAoB,CAACE,KAArB,EAAzB;AACA,ADVK,GAFD,CCYAE,gBAAgB,GAAG,EAAvB;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AAEA,ADXI,ICWAC,GDXKtE,gBAAL,GAAwB,GCWC,GAAG,ADXE,ECWlC;AACA,ADXQ,MCWFuE,KDXS1F,ECWF,GAAG,IAAIhB,IDXZ,iBCWQ,CAAW,CAAX,CAAhB;AACA,ADXK,GAFD,GCaE2G,OAAO,GAAG,IAAI3G,qBAAJ,CAAW,CAAX,CAAhB;AACA+F,IAAI,CAAC1E,SAAL,CAAeqF,OAAf;AACAX,ADXI,ICWA,CAAC1E,EDXIe,OCWT,CAAeuE,OAAf,CDXI,GAAyBrF,MAAD,IAAY;ACYxCyE,ADXQ/E,ICWJ,ADXIA,CCWHoB,YDXgB,GAAGd,CCWxB,CAAsBoF,IDXd,GCWR;AACAE,ADXK,GAFD,CCaA;AACJC,QAAQ;AACR3C,ADXI,OCWG,ADXE7B,CCWDyE,SAAR,ADXI,CCWcC,EDXI,CCWtB,CAAsB,IDXM,UCW5B;AACApC,ADXQ,UAAMrC,CCWH,CAACwE,IDXQ,GAAGvE,ECWvB,CAAsBwE,GAAtB,CAA0B,QDXY,EAA9B,CCWR;AACA9B,OAAO,CAAC6B,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;ADXQ,UAAMvE,OAAO,GAAG,EAAhB;ACaR,ADXQtB,ICWJ8F,ADXI9F,OAAO,CAACuB,ICWA,CAACwE,EDXT,CAAgBrF,CAAC,GCWrB,CAAqB,ADXI,SCWzB,MAAoC,IAAxC,EAA8C;AAC1CoF,ADXQ,ECWRA,QDXYpF,CAAC,GCWD,CAACsF,CDXK5E,MCWlB,ADXwB,CCWH,ADXII,SCWzB,EAAgCpC,CDXxB,EAA+B,GCWD,CAAC,CAAD,CAAtC;AACA0G,ADXYxE,ECWZwE,MDXYxE,MCWA,CAAC0E,ADXM,CAAC3F,IAAR,CAAaK,CCWzB,ADXY,CCWS,SAArB,EAAgCtB,MAAM,CAAC,CAAD,CAAtC;AAEA6G,ADZS,ECYTA,YAAY;AACf,ADZQ,CCOT,IDXQ,ECgBD;AACHA,ADZI,ECYJA,SDZW3E,GCYC,IDZR;ACaP,ADXI,GAXD;;ACuBJ,ADVI,ICUA4E,CAAC,EDVIzE,CCUD,CAAR,IDVI,GAAc,MAAM;ACYxB,ADXQ,QAAIL,MAAM,GAAG,KAAKC,eAAL,EAAb;;ACYRuC,ADXQ,WCWG,ADXIxC,CCWH+E,KDXS,CAACzE,SAAP,CCWf,CAA6B,CDXK,CAAnB,GAAuB,GCWtC,CDXe,CCWwB,EDXM,KAArC,GCWyC0E,KAAV,EAAiB;AACxDtB,ADXK,ECWLA,CDdI,SCcM,GAAGlB,WAAW,CAACyC,KAAzB;AACAd,EAAAA,yBAAyB,GAAG,EAA5B;AACAe,ADXI,ECWJA,KAAK,ADXIjF,eAAL,GAAuB,MAAM;ACYhC,ADXO,CCOR,ODPYG,YAAY,GAAG,CAAnB;ACaRuB,ADZQ,ICYJ,CAACoD,GDZOxE,GAAG,GAAG,IAAIC,GCYtB,ADZkB,CCYI,CDZd,OCYR,EAAgC,UAAUwE,KAAV,EAAiB;AAC7CzB,ADXI3E,ECWJ2E,EDXI3E,OAAO,CAACuB,KCWG,EDXX,CCWc,ADXEb,CAAC,GCWrB,CDXyB;ACYzB8D,ADXQ,ECWRA,IAAI,CAACoB,KDXS/D,ICWd,CAAe0E,IDXQ,ECWvB,CAAsB,ADXI7F,CAAC,CAACvB,QAAF,CCW1B,CDXQ;ACYRqF,ADXQhD,ECWRgD,IAAI,ADXIhD,CCWHoE,SAAL,CAAeC,CDXK,ECWpB,CAAmB,ADXIhE,SCWvB,ADXgC,GAAGL,YAAZ,GAA2BK,SAA3B,GAAuCL,YAAtD,CAFiB,CAGjB;ACYRgF,ADXQ,ECWRA,mBAAmB;AACnB,MAAI/B,UAAU,GAAGgC,aAAa,EAA9B;AACAC,ADZQ,ECYRA,QDZY/E,GAAG,CCYH,ADZIG,CCYH1C,EDZD,CAAQyC,GCYD,CAAC4C,KDZR,CAAJ,EAAwB,ECYb,CAAN,KAAuBF,aAAxB,CAAZ;AACAoC,ADZYhF,ECYZgF,MDZYhF,GAAG,CCYL,ADZMI,GAAJ,CAAQF,SAAR,EAAmBF,GAAG,CAACK,GAAJ,CAAQH,SAAR,IAAqB,CAAxC;ACaZoC,ADZS,ECYTA,KDdQ,KCcE,CDZK;ACafgC,ADZYtE,ECYZsE,MDZYtE,GAAG,CAACI,ECYJ,CDZA,CAAQF,SAAR,EAAmB,CAAnB;ACaZuE,ADZS,ECYTA,KAAK,CAACQ,cAAN;AACH,ADZQ,CCAT,EAYG,EDtBK,GCUR;AAcApC,ADZQ,ICYJ,CAAC2B,MDZU,UCYf,CAAsB,OAAtB,EAA+B,YAAY;AACvC,ADZQ3E,MCYJmD,ADZInD,YAAY,EAAEA,CCYtB,EAAqB,SDbV;ACcP8E,ADZI5E,ICYJ4E,EDZI5E,GCYC,MDZQ,EAAEC,GAAG,CAACK,GAAJ,CAAQR,YAAR;ACafmD,ADfO,ICePA,CDfA,cCee,GAAG,KAAlB;AACAH,ADXH,GArBD,CCgCIA,IAAI,CAACoB,SAAL,CAAeC,GAAf,CAAmB,WAAnB;AACArB,IAAAA,IAAI,CAACoB,SAAL,CAAeW,MAAf,CAAsB,SAAtB;AAEH,ADZD,OAAK/G,QAAL,GAAgB,MAAM;ACazB,ADZO,CCIR,UDJe,WAAWI,IAAX,GAAkB,eAAlB,GAAoCC,SAApC,GAAgD,cAAhD,GAAiEI,WAAjE,GAA+E,gBAA/E,GAAkGH,aAAlG,GACH,aADG,GACaE,OAAO,CAACR,QAAR,EADpB;ACcR0D,ADZK,GCYF,ADfC,CCeAiD,gBAAJ,CAAqB,OAArB,EAA8B,YAAY;AAElC1C,ADbP,ECaOA,WAAW,CAACmC,SAAZ,CAAsBW,MAAtB,CAA6B,WAA7B;AACA7C,EAAAA,QAAQ,CAACkC,SAAT,CAAmBW,MAAnB,CAA0B,SAA1B;AACA7C,EAAAA,QAAQ,CAACkC,SAAT,CAAmBC,GAAnB,CAAuB,WAAvB;AACApC,EAAAA,WAAW,CAACmC,SAAZ,CAAsBC,GAAtB,CAA0B,SAA1B;AACA9B,EAAAA,OAAO,CAAC6B,SAAR,CAAkBW,MAAlB,CAAyB,MAAzB;AACArD,EAAAA,GAAG,CAAC0C,SAAJ,CAAcC,GAAd,CAAkB,MAAlB;AACP,CARD;AAUA9B,OAAO,CAACoC,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;AAC1CjD,EAAAA,GAAG,CAAC0C,SAAJ,CAAcW,MAAd,CAAqB,MAArB;AACAxC,EAAAA,OAAO,CAAC6B,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;AAEAnC,EAAAA,QAAQ,CAACkC,SAAT,CAAmBW,MAAnB,CAA0B,WAA1B;AACA9C,EAAAA,WAAW,CAACmC,SAAZ,CAAsBC,GAAtB,CAA0B,WAA1B;AACApC,EAAAA,WAAW,CAACmC,SAAZ,CAAsBW,MAAtB,CAA6B,SAA7B;AACA7C,EAAAA,QAAQ,CAACkC,SAAT,CAAmBC,GAAnB,CAAuB,SAAvB;AACH,CARD;AAUAxC,QAAQ,CAAC8C,gBAAT,CAA0B,OAA1B,EAAmC,YAAY;AAE3CtB,EAAAA,IAAI,CAAC9D,gBAAL;AACA+E,EAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC5G,MAAM,CAAC,CAAD,CAAtC;AACA0G,EAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC5G,MAAM,CAAC,CAAD,CAAtC;AACA4D,EAAAA,OAAO,CAAC4C,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACA5C,EAAAA,OAAO,CAAC2C,SAAR,CAAkBW,MAAlB,CAAyB,cAAzB;AACA1B,EAAAA,IAAI,CAAC3D,gBAAL,CAAsBsE,OAAtB;AACAA,EAAAA,OAAO,CAACnG,QAAR,CAAiB,CAAjB;AACAoG,EAAAA,OAAO,CAACpG,QAAR,CAAiB,CAAjB;AACA4G,EAAAA,YAAY;AACf,CAXD;;AAcA,SAASQ,aAAT,GAAyB;AACrB,MAAIhC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhD,SAAS,CAACrD,MAA9B,EAAsCqG,CAAC,EAAvC,EAA2C;AACvC,QAAIhD,SAAS,CAACgD,CAAD,CAAT,CAAaC,OAAjB,EAA0B;AAEtBrC,MAAAA,UAAU,GAAGZ,SAAS,CAACgD,CAAD,CAAT,CAAaR,KAA1B;AAEH;AACJ;;AAGD,SAAO5B,UAAP;AACH;;AAED,SAAS+B,mBAAT,GAA+B;AAC3BhE,EAAAA,UAAU,CAACuE,QAAX,GAAsB,IAAtB;AACAtE,EAAAA,WAAW,CAACsE,QAAZ,GAAuB,IAAvB;AACArE,EAAAA,UAAU,CAACqE,QAAX,GAAsB,IAAtB;AACH;;AAED,SAASL,YAAT,CAAsBM,WAAtB,EAAmC;AAC/B,MAAIA,WAAJ,EAAiB;AACblE,IAAAA,MAAM,CAAC8C,SAAP,CAAiBW,MAAjB,CAAwB,KAAxB;AACAzD,IAAAA,MAAM,CAAC8C,SAAP,CAAiBC,GAAjB,CAAqB,OAArB;AACAoB,IAAAA,YAAY,CAAC,UAAD,CAAZ;AACAC,IAAAA,WAAW;AACd,GALD,MAMK;AACDpE,IAAAA,MAAM,CAAC8C,SAAP,CAAiBW,MAAjB,CAAwB,OAAxB;AACAzD,IAAAA,MAAM,CAAC8C,SAAP,CAAiBC,GAAjB,CAAqB,KAArB;AACAoB,IAAAA,YAAY,CAAC,kCAAkC5C,YAAY,CAACE,aAAD,CAAZ,CAA4B3E,IAA/D,CAAZ;AACH;AACJ;AAED;;;AAEA,eAAe8F,IAAf,GAAsB;AAClBrB,EAAAA,YAAY,GAAG,MAAM8C,kBAAkB,EAAvC;;AACA,OAAI,IAAIN,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGxC,YAAY,CAAC7D,MAA9B,EAAsCqG,CAAC,EAAvC,EAA0C;AACtC,QAAG7B,kBAAkB,CAACoC,QAAnB,CAA4B/C,YAAY,CAACwC,CAAD,CAAZ,CAAgBjH,IAA5C,KAAqDqF,oBAAoB,CAACmC,QAArB,CAA8B/C,YAAY,CAACwC,CAAD,CAAZ,CAAgBjH,IAA9C,CAAxD,EAA4G,CAE3G,CAFD,MAEK;AACF0F,MAAAA,kBAAkB,CAACY,CAAD,CAAlB,GAAwB7B,YAAY,CAACwC,CAAD,CAAZ,CAAgBjH,IAAxC;AAEAsG,MAAAA,CAAC;AACJ;AACA;;AACDb,EAAAA,gBAAgB,GAAGC,kBAAkB,CAACH,KAAnB,EAAnB;AACHmB,EAAAA,KAAK;AACR;;AAED,SAASX,QAAT,GAAoB;AAChB0B,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAGH;;AACD,SAASC,YAAT,GAAwB;AAEpB,MAAI1C,IAAI,CAACpD,MAAL,EAAJ,EAAmB;AACfL,IAAAA,MAAM,CAACoG,SAAP,GAAmB,kBAAnB;AAEH,GAHD,MAIK;AACD,QAAIhC,OAAO,CAACrG,QAAR,KAAqBsG,OAAO,CAACtG,QAAR,EAAzB,EAA6C;AACzC,UAAIF,KAAK,GAAG6G,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC5G,MAAM,CAACH,KAAD,CAAN,GAAgB,CAAhD;AACAmC,MAAAA,MAAM,CAACoG,SAAP,GAAmB,qBAAnB;AAEH,KALD,MAMK;AACD,UAAIvI,KAAK,GAAG6G,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC5G,MAAM,CAACH,KAAD,CAAN,GAAgB,CAAhD;AACAmC,MAAAA,MAAM,CAACoG,SAAP,GAAmB,qBAAnB;AACH;AACJ;;AACDxE,EAAAA,OAAO,CAAC4C,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACA5C,EAAAA,OAAO,CAAC2C,SAAR,CAAkBW,MAAlB,CAAyB,cAAzB;AACAf,EAAAA,OAAO,CAACnG,QAAR,CAAiB,CAAjB;AACAoG,EAAAA,OAAO,CAACpG,QAAR,CAAiB,CAAjB;AACA4G,EAAAA,YAAY;AACf;;AACD,SAASiB,WAAT,GAAuB;AACnBG,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,MAAIG,UAAU,GAAG5C,IAAI,CAAC5D,gBAAL,EAAjB;AACAwG,EAAAA,UAAU,CAACpI,QAAX,CAAoBoI,UAAU,CAACtI,QAAX,KAAwB,CAA5C;AACAkI,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH;;AAED,SAASX,UAAT,GAAsB;AAClB,MAAI9B,IAAI,CAAC7D,cAAL,KAAwB6D,IAAI,CAAChE,YAAL,EAA5B,EAAiD;AAC7CgE,IAAAA,IAAI,CAAC/D,aAAL;AACH,GAFD,MAEO;AACH,QAAI+D,IAAI,CAAC5D,gBAAL,GAAwB/B,KAAxB,OAAoCsG,OAAO,CAACtG,KAAR,EAAxC,EAAyD;AACrD8D,MAAAA,OAAO,CAAC4C,SAAR,CAAkBW,MAAlB,CAAyB,cAAzB;AACAtD,MAAAA,OAAO,CAAC2C,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACAhB,MAAAA,IAAI,CAAC3D,gBAAL,CAAsBuE,OAAtB;AAEH,KALD,MAKO;AACHZ,MAAAA,IAAI,CAAC3D,gBAAL,CAAsBsE,OAAtB;AACA+B,MAAAA,YAAY;AACf;;AACD1C,IAAAA,IAAI,CAAC9D,gBAAL;AAEH;AACJ;;AAED,eAAeuF,KAAf,GAAuB;AACnBlF,EAAAA,MAAM,CAACoG,SAAP,GAAmB,EAAnB;AACA1E,EAAAA,MAAM,CAAC0E,SAAP,GAAmB,EAAnB;AACAlD,EAAAA,OAAO,GAAGoD,wBAAwB,EAAlC,CAHmB,CAGmB;;AACtCnD,EAAAA,aAAa,GAAGD,OAAO,CAAC,CAAD,CAAvB,CAJmB,CAIS;;AAC5BqD,EAAAA,OAAO,CAACrD,OAAD,CAAP;AACAsD,EAAAA,wBAAwB,CAACC,mBAAmB,EAApB,CAAxB;AACAC,EAAAA,UAAU,CAACC,WAAW,CAACxD,aAAD,CAAZ,CAAV;AACA/B,EAAAA,UAAU,CAACuE,QAAX,GAAsB,KAAtB;AACAtE,EAAAA,WAAW,CAACsE,QAAZ,GAAuB,KAAvB;AACArE,EAAAA,UAAU,CAACqE,QAAX,GAAsB,KAAtB;AACAvE,EAAAA,UAAU,CAACsE,OAAX,GAAqB,KAArB;AACArE,EAAAA,WAAW,CAACqE,OAAZ,GAAsB,KAAtB;AACApE,EAAAA,UAAU,CAACoE,OAAX,GAAqB,KAArB;AACH;AAID;;;AACA,SAASkB,mBAAT,CAA6B9E,GAA7B,EAAiC;AAC7B,MAAG4B,UAAU,KAAK,MAAlB,EAAyB;AACrB,SAAI,IAAI+B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC7B,kBAAkB,CAACxE,MAAlC,EAAyCqG,CAAC,EAA1C,EAA6C;AACzC,UAAGxC,YAAY,CAACnB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BoF,kBAAkB,CAAC6B,CAAD,CAAhD,EAAoD;AACnD,eAAO,IAAP;AACA;AACJ;AACJ;;AACD,MAAG/B,UAAU,KAAK,QAAlB,EAA2B;AACvB,SAAI,IAAI+B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5B,oBAAoB,CAACzE,MAApC,EAA2CqG,CAAC,EAA5C,EAA+C;AAC3C,UAAGxC,YAAY,CAACnB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BqF,oBAAoB,CAAC4B,CAAD,CAAlD,EAAsD;AACrD,eAAO,IAAP;AACA;AACJ;AACJ;;AACD,MAAG/B,UAAU,KAAK,MAAlB,EAAyB;AACrB,SAAI,IAAI+B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC7B,kBAAkB,CAACxE,MAAlC,EAAyCqG,CAAC,EAA1C,EAA6C;AACzC,UAAGxC,YAAY,CAACnB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BoF,kBAAkB,CAAC6B,CAAD,CAAhD,EAAoD;AACnD,eAAO,KAAP;AACA;AACJ;;AACD,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5B,oBAAoB,CAACzE,MAApC,EAA2CqG,CAAC,EAA5C,EAA+C;AAC3C,UAAGxC,YAAY,CAACnB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BqF,oBAAoB,CAAC4B,CAAD,CAAlD,EAAsD;AACrD,eAAO,KAAP;AACA;AACJ;;AAED,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;;AACD,eAAeM,kBAAf,GAAoC;AAChC,MAAI;AACA,QAAIc,QAAQ,GAAG,MAAMC,KAAK,CAAC9D,OAAD,CAA1B;AACA,QAAIC,YAAY,GAAG,MAAM4D,QAAQ,CAACE,IAAT,EAAzB;AACA,WAAO9D,YAAP;AACH,GAJD,CAIE,OAAO+D,KAAP,EAAc;AACZf,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH;AACJ;;AACD,SAASnB,YAAT,CAAsBoB,GAAtB,EAA2B;AACvBvF,EAAAA,MAAM,CAAC0E,SAAP,GAAmBa,GAAnB;AACH;AACD;;;;;AAGA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,MAAIC,YAAY,GAAG,IAAnB;AACAF,EAAAA,GAAG,GAAGG,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,YAAY,GAAGC,IAAI,CAACE,KAAL,CAAWJ,GAAX,IAAkB,CAArB,GAAyBE,IAAI,CAACE,KAAL,CAAWJ,GAAX,CAA3C;AACA,MAAIK,MAAM,GAAGH,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBL,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAA3D;AACA,SAAOM,MAAP;AACH;;AAED,SAASjB,wBAAT,CAAkCkB,YAAlC,EAAgD;AAChD;;;AAGI1G,EAAAA,KAAK,CAAC2G,SAAN,GAAkB1E,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAZ,CAAyB1E,IAA3C;AACA0C,EAAAA,MAAM,CAACyG,SAAP,GAAmB1E,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAZ,CAAyB1E,IAA5C;AACA2C,EAAAA,KAAK,CAACwG,SAAN,GAAkB1E,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAZ,CAAyB1E,IAA3C;AACA4C,EAAAA,UAAU,CAAC6D,KAAX,GAAmB/B,OAAO,CAAC,CAAD,CAA1B;AACA7B,EAAAA,WAAW,CAAC4D,KAAZ,GAAoB/B,OAAO,CAAC,CAAD,CAA3B;AACA5B,EAAAA,UAAU,CAAC2D,KAAX,GAAmB/B,OAAO,CAAC,CAAD,CAA1B;AACH;;AAED,SAASwD,UAAT,CAAoBkB,IAApB,EAA0B;AACtB/G,EAAAA,OAAO,CAACgH,GAAR,GAAcD,IAAd;AACH;;AAED,SAASnB,mBAAT,GAA+B;AAC3B,MAAIqB,KAAK,GAAG,EAAZ;AACA,MAAIC,UAAJ;;AACA,OAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvC,OAAO,CAAC9D,MAA5B,EAAoCqG,CAAC,EAArC,EAAyC;AACrCsC,IAAAA,UAAU,GAAG7E,OAAO,CAACuC,CAAD,CAApB;AACAqC,IAAAA,KAAK,CAACrC,CAAD,CAAL,GAAWxC,YAAY,CAAC8E,UAAD,CAAZ,CAAyBvJ,IAApC;AACH;;AACD,SAAOsJ,KAAP;AACH;;AAED,SAASnB,WAAT,CAAqBxD,aAArB,EAAoC;AAChC,SAAOF,YAAY,CAACE,aAAD,CAAZ,CAA4ByE,IAAnC;AACH;;AACD,SAASrB,OAAT,CAAiByB,KAAjB,EAAwB;AAEpB,OAAK,IAAIvC,CAAC,GAAGuC,KAAK,CAAC5I,MAAN,GAAe,CAA5B,EAA+BqG,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAMX,CAAC,GAAGwC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBhC,CAA3B,CAAV;AACA,UAAMwC,IAAI,GAAGD,KAAK,CAACvC,CAAD,CAAlB;AACAuC,IAAAA,KAAK,CAACvC,CAAD,CAAL,GAAWuC,KAAK,CAAClD,CAAD,CAAhB;AACAkD,IAAAA,KAAK,CAAClD,CAAD,CAAL,GAAWmD,IAAX;AACH;AACJ;;AAED,SAASpD,YAAT,GAAwB;AACpBjD,EAAAA,OAAO,CAACwE,SAAR,GAAoBhC,OAAO,CAACrG,QAAR,KAAqB,GAArB,GAA2B0F,IAAI,CAAChE,YAAL,EAA/C;AACAoC,EAAAA,OAAO,CAACuE,SAAR,GAAoB,UAAU/B,OAAO,CAACtG,QAAR,EAAV,GAA+B,GAA/B,GAAqC0F,IAAI,CAAChE,YAAL,EAAzD;AACAsC,EAAAA,YAAY,CAACqE,SAAb,GAAyB1B,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAzB;AACA3C,EAAAA,YAAY,CAACoE,SAAb,GAAyB,UAAU1B,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAnC;AACA;;;AAGH,EACD;AACA;;;AAIA,SAASuD,sBAAT,GAAiC;AAC5BpF,EAAAA,IAAI,GAAGoE,YAAY,CAAC,CAAD,EAAIjE,YAAY,CAAC7D,MAAjB,CAAnB;AACA2D,EAAAA,IAAI,GAAGmE,YAAY,CAAC,CAAD,EAAIjE,YAAY,CAAC7D,MAAjB,CAAnB;AAEJ;;AACD,SAASkH,wBAAT,GAAoC;AAChC,MAAI6B,IAAJ;AACAD,EAAAA,sBAAsB;;AACtB,MAAGpE,gBAAgB,CAAC1E,MAAjB,GAA0B,CAA7B,EAA+B;AAC3B0E,IAAAA,gBAAgB,GAAGF,kBAAkB,CAACG,KAAnB,EAAnB;AACH;;AACD,MAAGC,kBAAkB,CAAC5E,MAAnB,GAA4B,CAA/B,EAAiC;AAC7B4E,IAAAA,kBAAkB,GAAGH,oBAAoB,CAACE,KAArB,EAArB;AACH;;AACD,MAAGE,gBAAgB,CAAC7E,MAAjB,GAA0B,CAA7B,EAA+B;AAC3B6E,IAAAA,gBAAgB,GAAGC,kBAAkB,CAACH,KAAnB,EAAnB;AACH;;AACD,MAAGL,UAAU,KAAK,MAAlB,EAAyB;AACrB,QAAI0E,KAAK,GAAGlB,YAAY,CAAC,CAAD,EAAIpD,gBAAgB,CAAC1E,MAArB,CAAxB;AACA+I,IAAAA,IAAI,GAAGrE,gBAAgB,CAACsE,KAAD,CAAvB;AACAtE,IAAAA,gBAAgB,CAACuE,MAAjB,CAAwBD,KAAxB,EAA+B,CAA/B;AACH;;AAAA,MAAG1E,UAAU,KAAK,QAAlB,EAA2B;AACxB,QAAI0E,KAAK,GAAGlB,YAAY,CAAC,CAAD,EAAIlD,kBAAkB,CAAC5E,MAAvB,CAAxB;AACA+I,IAAAA,IAAI,GAAGnE,kBAAkB,CAACoE,KAAD,CAAzB;AACDpE,IAAAA,kBAAkB,CAACqE,MAAnB,CAA0BD,KAA1B,EAAiC,CAAjC;AACF;;AAAA,MAAG1E,UAAU,KAAK,MAAlB,EAAyB;AACtB,QAAI0E,KAAK,GAAGlB,YAAY,CAAC,CAAD,EAAIjD,gBAAgB,CAAC7E,MAArB,CAAxB;AACA+I,IAAAA,IAAI,GAAGlE,gBAAgB,CAACmE,KAAD,CAAvB;AACAnE,IAAAA,gBAAgB,CAACoE,MAAjB,CAAwBD,KAAxB,EAA+B,CAA/B;AACH;;AACD,OAAI,IAAI3C,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACxC,YAAY,CAAC7D,MAA5B,EAAoCqG,CAAC,EAArC,EAAwC;AACpC,QAAG0C,IAAI,KAAKlF,YAAY,CAACwC,CAAD,CAAZ,CAAgBjH,IAA5B,EAAiC;AAC7BmF,MAAAA,aAAa,GAAG8B,CAAhB;AACH;AACJ;;AACD,SAAM3C,IAAI,KAAKa,aAAT,IAA0BA,aAAa,KAAKZ,IAA5C,IAAoDD,IAAI,KAAKC,IAAnE,EAAwE;AACpEmF,IAAAA,sBAAsB;AACzB;;AAGD,OAAI,IAAIzC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC3B,gBAAgB,CAAC1E,MAAhC,EAAwCqG,CAAC,EAAzC,EAA4C;AACpCQ,IAAAA,OAAO,CAACC,GAAR,CAAYpC,gBAAgB,CAAC2B,CAAD,CAA5B;AACP;;AAGD,SAAO,CAAC9B,aAAD,EAAgBb,IAAhB,EAAsBC,IAAtB,CAAP;AACH","file":"javascripts.ea2fe77b.js","sourceRoot":"../src","sourcesContent":["export function Player(playerId){\n    // 1\n    const id = playerId;\n    let score = 0;\n\n\n    this.getId = () => {\n        return id;\n    }\n  \n    this.getScore = () => {\n        return Number(score);\n    }\n    // 2 3 \n    this.setScore = (playerScore) => {\n        if (playerScore < 0) {\n            throw new Error(\"Score cannot be negative\");\n        }\n        score = Number(playerScore);\n    }\n\n    this.toString = () => {\n        return \"id: \" + id + \", score: \" + score;\n    };\n}","import { Player } from \"./player-module-v2\";\n\n\n\nexport function Game(gameName, numberOfTurns) {\n    const name = gameName;\n    let noOfTurns = numberOfTurns;\n\n    let currentPlayer = undefined;\n    let players = [];\n    let currentTurn = 1;\n\n    this.getGameName = () => {\n        return name;\n    }\n\n    this.addPlayer = (player) => {\n        players.push(player);\n    }\n\n    this.removePlayer = (player) => {\n        let initialLength = players.length;\n        players = players.filter(p => p.id !== player.id);\n\n        if (initialLength === players.length) {\n            throw new Error(\"Cannot remove the player. Player not found.\");\n        }\n    }\n\n    this.getNoOfPlayers = () => {\n        return players.length;\n    }\n\n    this.setNoOfTurns = (numberOfTurns) => {\n        noOfTurns = numberOfTurns;\n    }\n\n    this.getNoOfTurns = () => {\n        return noOfTurns;\n    }\n    \n    this.incrementTurn = () => {\n        if (currentTurn < noOfTurns) {\n            currentTurn++;\n        } else {\n            throw new Error(\"Current turn can not be larger than total number of turns.\");\n        }\n    }\n\n    this.resetCurrentTurn = () => {\n        currentTurn = 1;\n    }\n\n    this.getCurrentTurn = () => {\n        return currentTurn;\n    }\n\n    this.getCurrentPlayer = () => {\n        return currentPlayer;\n    }\n\n    this.setCurrentPlayer = (player) => {\n        currentPlayer = player;\n    }\n    \n    this.getWinners = () => {\n        const result = _isDrawInternal();\n        const winners = [];\n\n        players.forEach(p => {\n            if (p === result.highestScore) {\n                winners.push(p);\n            }\n        });\n        return winners;\n\n    }\n\n    this.isDraw = () => {\n        let result = this._isDrawInternal();\n        return result.frequency > 1 ? true : false;\n    }\n\n    this._isDrawInternal = () => {\n        let highestScore = 0;\n        let map = new Map();\n\n        players.forEach(p => {\n            const currScore = p.getScore();\n            highestScore = currScore > highestScore ? currScore : highestScore;\n            //let frequency = map.get(currScore);\n            // if frequency is null/undefined/0/\"\" the next line is false\n            if (map.has(currScore)) {\n                map.set(currScore, map.get(currScore) + 1);\n            } else {\n                map.set(currScore, 1);\n            }\n        });\n      \n        return {\n            highestScore: highestScore,\n            frequency: map.get(highestScore)\n        };\n\n    }\n\n    this.toString = () => {\n        return \"name: \" + name + \", noOfTurns: \" + noOfTurns + \", currTurn: \" + currentTurn + \", currPlayer: \" + currentPlayer +\n            \"\\nplayers: \" + players.toString();\n    }\n} ","import { Player } from \"../modulev2/player-module-v2\";\nimport { Game } from \"../modulev2/game-module-v2\";\n// set constants for number of options, country array\n// vars: options(array which keeps indexes), correctAnswer(index), userAnswer(index),   \n\n\n/* ----------------------- HTML elements -------------------------- */\nlet flagImg = document.getElementById(\"flag\");\nlet first = document.querySelector(\"#options .option:nth-of-type(1) label\");\nlet second = document.querySelector(\"#options .option:nth-of-type(2) label\");\nlet third = document.querySelector(\"#options .option:nth-of-type(3) label\");\nlet firstInput = document.getElementById(\"choice1\");\nlet secondInput = document.getElementById(\"choice2\");\nlet thirdInput = document.getElementById(\"choice3\");\nlet firstCircle = document.getElementById(\"circleOne\");\nlet secondCircle = document.getElementById(\"circleTwo\");\nlet thirdCircle = document.getElementById(\"circleThree\");\nlet answer = document.getElementById(\"answer\");\nlet result = document.getElementById(\"result\");\nlet form = document.querySelector(\"form\");\nlet p1Score = document.querySelector(\"#rightScore\");\nlet p2Score = document.querySelector(\"#leftScore\");\nlet opt = document.querySelector(\"#settings\");\nlet p1MatchScore = document.querySelector(\"#p1MatchScore\");\nlet p2MatchScore = document.querySelector(\"#p2MatchScore\");\nlet resetBtn = document.querySelector(\"#resetBtn\");\nlet levelNumber = document.querySelector(\"#levelNumber\");\nlet matchNumber = document.querySelector(\"#matchNumber\");\nlet playersNumber = document.querySelector(\"#playersNumber\");\nlet optionsPage = document.querySelector(\"#optionsPage\");\nlet gamePage = document.querySelector(\"#gamePage\");\nlet back = document.querySelector(\"#backToGame\");\nlet levelChoice = document.querySelector(\"#level-select\");\nlet radioBtns = document.querySelectorAll(\"input[type=radio]\");\nlet playBtn = document.querySelector(\"#play\");\n// other variables \nconst NUMBER_OF_OPTIONS = 3;\nlet gameNumber = 1;\nlet opt2;\nlet opt3;\nconst API_URL = \"https://restcountries.eu/rest/v2/all\"\nlet countryArray;\nlet options = [];\nlet correctAnswer;\nlet next = document.getElementById(\"nextBtn\");\nlet userAnswer;\nlet flagsPerMatch = 2;\nlet nextFlagAllowed = false;\nlet level = \"medium\";\nlet game = new Game(\"Flag game\", flagsPerMatch);\nlet difficulty = \"medium\";\nlet indexOfAnswer = 0;\nlet easyFlagsImmutable = [\"Korea (Republic of)\", \"Australia\", \"Netherlands\", \"Indonesia\", \"Saudi Arabia\", \n\"Mayotte\", \"Antarctica\", \"Israel\", \"Canada\", \"Switzerland\", \"Brazil\", \"Japan\", \n\"United Kingdom of Great Britain and Northern Ireland\", \"Sweden\",\"Turkey\", \"Germany\", \"United States of America\", \n\"Spain\", \"Cyprus\",\"Greece\", \"Austria\", \"Croatia\", \"Italy\", \"Russian Federation\",\"Ireland\", \n\"Poland\", \"France\", \"China\", \"Norway\",\"Portugal\"];\nlet mediumFlagsImmutable = [\"Liechtenstein\", \"Thailand\", \"Puerto Rico\", \"Korea (Democratic People's Republic of)\", \"Kenya\", \n\"Mexico\", \"Georgia\", \"Bosnia and Herzegovina\", \"Macedonia (the former Yugoslav Republic of)\", \n\"Saint Martin (French part)\", \"Malta\", \"Luxembourg\", \"Bulgaria\", \"Tunisia\", \"Republic of Kosovo\", \"Iraq\", \"India\", \n\"Egypt\",\"Chile\", \"Uruguay\", \"Belgium\", \"Mongolia\", \"Greenland\", \"Lithuania\",\"Montenegro\", \"Holy See\", \"Viet Nam\", \n\"Slovakia\", \"Slovenia\", \"Albania\", \"Hungary\", \"Czech Republic\", \"Denmark\", \"Macedonia\", \"Belarus\", \"Ukraine\", \n\"Estonia\", \"Lithuana\", \"Luxenbourg\", \"Latvia\", \"Romania\"];\nlet easyFlagsMutable = easyFlagsImmutable.slice();\nlet mediumFlagsMutable = mediumFlagsImmutable.slice();\nlet hardFlagsMutable = [];\nlet hardFlagsImmutable = [];\n\nlet currentlyUnavailableFlags = [];\nconst player1 = new Player(1);\nconst player2 = new Player(2);\ngame.addPlayer(player1);\ngame.addPlayer(player2);\ngame.setCurrentPlayer(player1); \ninit();\ninitGame();\np1Score.classList.add(\"activePlayer\");\noptionsPage.classList.add(\"invisible\");\nplayBtn.classList.add(\"bold\");\n\nif (localStorage.getItem(\"player1\") === null) {\n    localStorage.setItem('player1', Number(0));\n    localStorage.setItem('player2', Number(0));\n    \n    renderScores()\n} else {\n    renderScores()\n}\nlet j = 0;\n\n/* -------------------------- Event listeners ---------------------------- */\nlevelChoice.addEventListener(\"change\", function (event) {\ndifficulty = levelChoice.value;\ncurrentlyUnavailableFlags = [];\nreset();\n});\n\nform.addEventListener(\"change\", function (event) {\n    nextFlagAllowed = true;\n    next.classList.remove(\"invisible\");\n    next.classList.add(\"visible\");\n\n    disableRadioButtons();\n    let userAnswer = getUserAnswer();\n    renderAnswer(Number(userAnswer) === correctAnswer);\n    changeTurn();\n    gameNumber++;\n    renderScores();\n    event.preventDefault();\n}, false);\n\nnext.addEventListener(\"click\", function () {\n    if (nextFlagAllowed) {\n        reset();\n        nextFlagAllowed = false;\n        next.classList.add(\"invisible\");\n        next.classList.remove(\"visible\");\n\n    }\n});\n\nopt.addEventListener(\"click\", function () {\n    \n        optionsPage.classList.remove(\"invisible\");\n        gamePage.classList.remove(\"visible\");\n        gamePage.classList.add(\"invisible\");\n        optionsPage.classList.add(\"visible\");\n        playBtn.classList.remove(\"bold\");\n        opt.classList.add(\"bold\");\n});\n\nplayBtn.addEventListener(\"click\", function () {\n    opt.classList.remove(\"bold\");\n    playBtn.classList.add(\"bold\");\n    \n    gamePage.classList.remove(\"invisible\");\n    optionsPage.classList.add(\"invisible\");\n    optionsPage.classList.remove(\"visible\");\n    gamePage.classList.add(\"visible\");\n});\n\nresetBtn.addEventListener(\"click\", function () {\n    \n    game.resetCurrentTurn();\n    localStorage.setItem('player1', Number(0));\n    localStorage.setItem('player2', Number(0));\n    p1Score.classList.add(\"activePlayer\");\n    p2Score.classList.remove(\"activePlayer\");\n    game.setCurrentPlayer(player1);\n    player1.setScore(0);\n    player2.setScore(0);\n    renderScores();\n});\n\n\nfunction getUserAnswer() {\n    let userAnswer = \"\";\n    for (var i = 0; i < radioBtns.length; i++) {\n        if (radioBtns[i].checked) {\n\n            userAnswer = radioBtns[i].value;\n\n        }\n    }\n    \n\n    return userAnswer;\n}\n\nfunction disableRadioButtons() {\n    firstInput.disabled = true;\n    secondInput.disabled = true;\n    thirdInput.disabled = true;\n}\n\nfunction renderAnswer(userGuessed) {\n    if (userGuessed) {\n        answer.classList.remove(\"red\");\n        answer.classList.add(\"green\");\n        renderResult(\"Correct!\");\n        updateScore();\n    }\n    else {\n        answer.classList.remove(\"green\");\n        answer.classList.add(\"red\");\n        renderResult(\"Inncorect! Correct answer is \" + countryArray[correctAnswer].name);\n    }\n}\n\n/* ------------------------------ main methods --------------------------- */\n\nasync function init() {\n    countryArray = await requestCountryData();\n    for(let i=0; i < countryArray.length; i++){\n        if(easyFlagsImmutable.includes(countryArray[i].name) || mediumFlagsImmutable.includes(countryArray[i].name)){\n       \n        }else{\n           hardFlagsImmutable[j] = countryArray[i].name;\n           \n           j++;\n       }\n       }\n       hardFlagsMutable = hardFlagsImmutable.slice();\n    reset();\n}\n\nfunction initGame() {\n    console.log(\"Init game\");\n\n\n}\nfunction initNewMatch() {\n\n    if (game.isDraw()) {\n        result.innerHTML = \"It is a draw!!!!\";\n\n    }\n    else {\n        if (player1.getScore() > player2.getScore()) {\n            let score = localStorage.getItem(\"player1\");\n            localStorage.setItem(\"player1\", Number(score) + 1);\n            result.innerHTML = \"player one has won.\";\n\n        }\n        else {\n            let score = localStorage.getItem(\"player2\");\n            localStorage.setItem(\"player2\", Number(score) + 1);\n            result.innerHTML = \"player two has won.\";\n        }\n    }\n    p1Score.classList.add(\"activePlayer\");\n    p2Score.classList.remove(\"activePlayer\");\n    player1.setScore(0);\n    player2.setScore(0);\n    renderScores();\n}\nfunction updateScore() {\n    console.log(\"Updating score\");\n    let currPlayer = game.getCurrentPlayer();\n    currPlayer.setScore(currPlayer.getScore() + 1);\n    console.log(\"increasing player score and rendering\");\n}\n\nfunction changeTurn() {\n    if (game.getCurrentTurn() < game.getNoOfTurns()) {\n        game.incrementTurn();\n    } else {\n        if (game.getCurrentPlayer().getId() === player1.getId()) {\n            p1Score.classList.remove(\"activePlayer\");\n            p2Score.classList.add(\"activePlayer\");\n            game.setCurrentPlayer(player2);\n\n        } else {\n            game.setCurrentPlayer(player1);\n            initNewMatch();\n        }\n        game.resetCurrentTurn();\n\n    }\n}\n\nasync function reset() {\n    result.innerHTML = \"\";\n    answer.innerHTML = \"\";\n    options = generateOptionsAsIndexes(); // 56, 78, 134\n    correctAnswer = options[0]; // 56\n    shuffle(options);\n    renderCountryNamesOnBtns(extractCountryNames());\n    setFlagUrl(extractFlag(correctAnswer));\n    firstInput.disabled = false;\n    secondInput.disabled = false;\n    thirdInput.disabled = false;\n    firstInput.checked = false;\n    secondInput.checked = false;\n    thirdInput.checked = false;\n}\n\n\n\n/* ------------------------------ heplers ----------------------------- */\nfunction isCountryHardEnough(opt){\n    if(difficulty === \"easy\"){\n        for(let i=0; i<easyFlagsImmutable.length;i++){\n            if(countryArray[opt].name === easyFlagsImmutable[i]){\n             return true;   \n            }\n        }\n    }\n    if(difficulty === \"medium\"){\n        for(let i=0; i<mediumFlagsImmutable.length;i++){\n            if(countryArray[opt].name === mediumFlagsImmutable[i]){\n             return true;   \n            }\n        }\n    }\n    if(difficulty === \"hard\"){\n        for(let i=0; i<easyFlagsImmutable.length;i++){\n            if(countryArray[opt].name === easyFlagsImmutable[i]){\n             return false;   \n            }\n        }\n        for(let i=0; i<mediumFlagsImmutable.length;i++){\n            if(countryArray[opt].name === mediumFlagsImmutable[i]){\n             return false;   \n            }\n        }\n        \n        return true;\n    }\n    return false;\n}\nasync function requestCountryData() {\n    try {\n        let response = await fetch(API_URL);\n        let countryArray = await response.json();\n        return countryArray;\n    } catch (error) {\n        console.log(error);\n    }\n}\nfunction renderResult(msg) {\n    answer.innerHTML = msg;\n}\n/**\n * Returns a random number between min (inclusive) and max(exclusive)\n */\nfunction getRandomInt(min, max) {\n    let maxExclusive = true;\n    min = Math.ceil(min);\n    max = maxExclusive ? Math.floor(max) - 1 : Math.floor(max);\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    return random;\n}\n\nfunction renderCountryNamesOnBtns(countryNames) {\n/*     first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name; */\n    first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name;\n    firstInput.value = options[0];\n    secondInput.value = options[1];\n    thirdInput.value = options[2];\n}\n\nfunction setFlagUrl(flag) {\n    flagImg.src = flag;\n}\n\nfunction extractCountryNames() {\n    let names = [];\n    let countryNmb;\n    for (let i = 0; i < options.length; i++) {\n        countryNmb = options[i];\n        names[i] = countryArray[countryNmb].name;\n    }\n    return names;\n}\n\nfunction extractFlag(correctAnswer) {\n    return countryArray[correctAnswer].flag;\n}\nfunction shuffle(array) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nfunction renderScores() {\n    p1Score.innerHTML = player1.getScore() + \"/\" + game.getNoOfTurns();\n    p2Score.innerHTML = \"  :  \" + player2.getScore() + \"/\" + game.getNoOfTurns();\n    p1MatchScore.innerHTML = localStorage.getItem(\"player1\");\n    p2MatchScore.innerHTML = \"  :  \" + localStorage.getItem(\"player2\");\n    /* levelNumber.innerHTML = level;\n    matchNumber.innerHTML = flagsPerMatch;\n    playersNumber.innerHTML = game.getNoOfPlayers(); */\n}\n//localStorage.getItem(\"player1\") - match score\n//player1.getScore() -- actual score game.getNoOfTurns()\n\n\n\nfunction generateOtherCountries(){\n     opt2 = getRandomInt(0, countryArray.length);\n     opt3 = getRandomInt(0, countryArray.length);\n\n}\nfunction generateOptionsAsIndexes() {\n    let opt1;\n    generateOtherCountries();\n    if(easyFlagsMutable.length < 1){\n        easyFlagsMutable = easyFlagsImmutable.slice();\n    }\n    if(mediumFlagsMutable.length < 1){\n        mediumFlagsMutable = mediumFlagsImmutable.slice();\n    }\n    if(hardFlagsMutable.length < 1){\n        hardFlagsMutable = hardFlagsImmutable.slice();\n    }\n    if(difficulty === \"easy\"){\n        let index = getRandomInt(0, easyFlagsMutable.length)\n        opt1 = easyFlagsMutable[index];\n        easyFlagsMutable.splice(index, 1);\n    }if(difficulty === \"medium\"){\n        let index = getRandomInt(0, mediumFlagsMutable.length);\n        opt1 = mediumFlagsMutable[index];\n       mediumFlagsMutable.splice(index, 1);\n    }if(difficulty === \"hard\"){\n        let index = getRandomInt(0, hardFlagsMutable.length);\n        opt1 = hardFlagsMutable[index];\n        hardFlagsMutable.splice(index, 1);\n    }\n    for(let i=0; i<countryArray.length; i++){\n        if(opt1 === countryArray[i].name){\n            indexOfAnswer = i;\n        }\n    }\n    while(opt2 === indexOfAnswer || indexOfAnswer === opt3 || opt2 === opt3){\n        generateOtherCountries();\n    }\n\n\n    for(let i=0; i<easyFlagsMutable.length; i++){\n            console.log(easyFlagsMutable[i]);\n    }\n    \n\n    return [indexOfAnswer, opt2, opt3];\n}"]}