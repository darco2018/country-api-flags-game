{"version":3,"sources":["modulev2/player-module-v2.js","modulev2/game-module-v2.js","javascripts/index.js"],"names":["Player","playerId","id","score","getId","getScore","Number","setScore","playerScore","Error","toString","Game","gameName","numberOfTurns","name","noOfTurns","currentPlayer","undefined","players","currentTurn","getGameName","addPlayer","player","push","removePlayer","initialLength","length","filter","p","getNoOfPlayers","setNoOfTurns","getNoOfTurns","incrementTurn","resetCurrentTurn","getCurrentTurn","getCurrentPlayer","setCurrentPlayer","getWinners","result","_isDrawInternal","winners","forEach","highestScore","isDraw","frequency","map","Map","currScore","has","set","get","flagImg","document","getElementById","first","querySelector","second","third","firstInput","secondInput","thirdInput","firstCircle","secondCircle","thirdCircle","answer","form","p1Score","p2Score","opt","p1MatchScore","p2MatchScore","resetBtn","levelNumber","matchNumber","playersNumber","optionsPage","gamePage","back","levelChoice","radioBtns","querySelectorAll","playBtn","NUMBER_OF_OPTIONS","gameNumber","API_URL","countryArray","options","correctAnswer","next","userAnswer","flagsPerMatch","nextFlagAllowed","level","game","difficulty","easyFlags","mediumFlags","player1","player2","init","initGame","classList","add","localStorage","getItem","setItem","renderScores","addEventListener","event","value","reset","remove","disableRadioButtons","getUserAnswer","renderAnswer","changeTurn","preventDefault","i","checked","disabled","userGuessed","renderResult","updateScore","requestCountryData","console","log","initNewMatch","innerHTML","currPlayer","generateOptionsAsIndexes","shuffle","renderCountryNamesOnBtns","extractCountryNames","setFlagUrl","extractFlag","opt1","getRandomInt","opt2","opt3","isCountryHardEnough","response","fetch","json","error","msg","min","max","maxExclusive","Math","ceil","floor","random","countryNames","innerText","flag","src","names","countryNmb","array","j","temp"],"mappings":";;AEAA;;AACA;;AACA;AACA,ADHA,ADAO,SAASA,MAAT,CAAgBC,QAAhB,EAAyB;AAC5B;AEKJ,ADFO,ADFH,QAAMC,CCEMS,CDFJ,GCEL,ADFQV,CCEMW,ODFjB,CCEG,EAAwBC,aAAxB,EAAuC;ACG9C,ADFI,ADFA,IEIAsC,EFJIhD,ECEEW,GCEC,AFJE,CCEC,ECEAsC,AFJE,CCECxC,ADFb,OEIkB,CAACyC,ADFnB,cCEU,CAAwB,MAAxB,CAAd;AACA,ADFI,ICEAC,EDFIvC,GCEC,GAAGqC,GDFK,GAAGvC,ECEA,CAAC0C,UDFjB,GCEQ,CAAuB,uCAAvB,CAAZ;AACA,ADDI,ADFA,IEGAC,EDDIxC,CDFCZ,GEGC,EFHN,CEGSgD,EFHI,ICEI,ECCA,AFHE,CEGDG,ADDEtC,SAApB,ICCS,CAAuB,uCAAvB,CAAb;AACA,ADDI,ADFI,IEGJwC,EDDIvC,GCCC,EFHMhB,CEGHkD,CDDG,ADFP,GCEU,EAAd,ECCgB,CAACG,aAAT,CAAuB,uCAAvB,CAAZ;AACA,ADDI,ADFC,GAFD,CEKAG,EDDIvC,QCCM,GAAGiC,ADDE,GAAG,CAAlB,ICCqB,CAACC,cAAT,CAAwB,SAAxB,CAAjB;AACA,IAAIM,WAAW,GAAGP,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB;AACA,ADDI,ADFA,IEGAO,GDDKxC,ADFAf,OEGK,CFHV,EEGa+C,CDDb,ADFgB,GCEG,GDFG,CEGD,CAACC,CDDG,aCCZ,CAAwB,SAAxB,CAAjB;AACA,ADDQ,ADFA,IEGJQ,ODDW/C,ADFAR,IEGA,ADDP,EDFa,CEGH8C,AFHIjD,KAAD,CAAb,EEGkB,CAACkD,cAAT,CAAwB,WAAxB,CAAlB;AACA,ADDK,ADFA,GCAD,ADFA,CEKAS,AFf4B,CAa5B,WEEY,GAAGV,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAnB;AACA,IAAIU,WAAW,GAAGX,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AACA,ADDI,ICCAW,GDDK3C,GCCC,GAAG+B,GDDT,GAAkB9B,ECCD,CAAC+B,GDDD,IAAY,OCCpB,CAAwB,QAAxB,CAAb;AACA,ADDQnC,ADHJ,IEIA+C,ADDI/C,GDHCX,CEID,GAAG6C,ADDI,CAAC7B,GDHZ,CCGI,CAAaD,CDHAd,CEIF,CAAC+C,GDDZ,MDHY,IEIT,AFJ0B,CEIH,MAAvB,CAAX;AACA,ADDK,ADHG,GCCJ,CCGAW,IFJQ1D,GEID,GAAG4C,KFJS,GEID,AFJI,CEIHG,AFJf,EAAqB,WEIf,CAAuB,aAAvB,CAAd;AACA,AFJY,IEIRY,OAAO,CFJO,EEIJf,EFJQ3C,KAAJ,CEII,AFJM,CEIL8C,aAAT,CAAuB,WFJnB,CEIJ,AFJF,CEIZ;AACA,ADDI,ADHK,IEILa,GAAG,ADDE5C,GCCC4B,QAAQ,CAACG,ADDf,GAAqBjC,MAAD,ICCd,ADD0B,CCCH,WAAvB,CAAV;AACA,ADDQ,ICCJ+C,IDDQ5C,QCCI,GAAG2B,EDDM,GAAGlC,GCCD,CAACqC,GDDO,CAAC7B,MAA5B,GCCW,CAAuB,eAAvB,CAAnB;AACA,ADDQR,ADJAf,IEKJmE,ADDIpD,ADJAf,KAAK,ECIE,CDJCG,ECIEY,ECCF,EFLM,CEKHkC,AFLI5C,ECIE,CAACmB,KCCC,CAAC4B,ADDV,CAAe3B,CAAC,ADJZ,CAAd,GCI8BA,CAAC,CAAC1B,EAAF,GCCnB,CAAuB,CDDKoB,MAAM,CAACpB,EAApC,CAAV,ICCW,CAAnB;AACA,AFLK,GALD,CEUAqE,QAAQ,GAAGnB,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAAf;AACA,ADDQ,ICCJiB,IDDQ/C,OCCG,GAAG2B,GDDO,KCCC,ADDIlC,CCCHqC,MDDU,CAAC7B,MCCpB,ADDV,CCCiC,CDDK,aCC5B,CAAlB;AACA,ADDY,ADJR,IEKA+C,GFLK/D,KCIS,GCCH,AFLX,CCIkBD,ECCJ2C,AFLE,GCIF,CAAU,EDJF,EEKA,CAACG,aAAT,CAAuB,cAAvB,CAAlB,WDDkB,CAAN;ACEZ,ADDS,ADJD,IEKJmB,OFLW,MEKE,GAAGtB,AFLIlD,EAAT,GAAc,GEKD,CAACqD,OFLd,GAA4BpD,GEKvB,CAAuB,CFLnC,eEKY,CAApB;AACA,ADDK,ADJA,GCHD,ADCA,CEOAwE,WAAW,GAAGvB,QAAQ,CAACG,aAAT,CAAuB,cAAvB,CAAlB;AACA,AFLC,IEKGqB,QAAQ,GAAGxB,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAAf;AACA,ADDI,ICCAsB,GDDKhD,CCCD,GAAGuB,QAAQ,CAACG,CDDhB,GAAsB,MAAM,GCCrB,CAAuB,aAAvB,CAAX;AACA,ADDQ,ICCJuB,ODDW5D,ICCA,GAAGkC,ADDI,CAAC1B,MAAf,CCCkB,CAAC6B,aAAT,CAAuB,eAAvB,CAAlB;AACA,ADDK,GAFD,CCGAwB,SAAS,GAAG3B,QAAQ,CAAC4B,gBAAT,CAA0B,mBAA1B,CAAhB;AACA,IAAIC,OAAO,GAAG7B,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAd,EACA;ADDI,OAAKzB,YAAL,GAAqBjB,aAAD,IAAmB;ACE3C,ADDQE,IAAAA,ECCFmE,ODDW,GAAGrE,OCCG,GAAG,CAA1B,EDDQ;ACER,ADDK,GAFD,CCGAsE,UAAU,GAAG,CAAjB;AACA,MAAMC,OAAO,GAAG,sCAAhB;AACA,ADDI,ICCAC,GDDKtD,SCCT,GDDI,GAAoB,MAAM;ACE9B,ADDQ,ICCJuD,OAAO,ADDIvE,GCCD,EAAd,IDDQ;ACER,ADDK,GAFD,CCGAwE,aAAJ;AACA,IAAIC,IAAI,GAAGpC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAX;AACA,ADDI,ICCAoC,GDDKzD,OCCT,MDDI,GAAqB,MAAM;ACE/B,ADDQ,ICCJ0D,IDDQvE,SCCK,EDDM,CCCH,CAApB,CDD0BJ,SAAlB,EAA6B;ACErC,ADDYI,ICCRwE,EDDQxE,WAAW,ECCJ,GAAG,KAAtB;AACA,ADDS,ICCLyE,CDHI,ICGC,EDDM,CCCH,QAAZ;AACA,ADDY,ICCRC,IAAI,GAAG,CDDO,GCCHlF,CDDOF,KAAJ,CAAU,UCCjB,CAAS,WAAT,EAAsBiF,aAAtB,CAAX,sBDDkB,CAAN;ACEZ,ADDS,ICCLI,UAAU,GAAG,QAAjB;AACA,ADDK,GAND,CCOAC,SAAS,GAAG,CAAC,qBAAD,EAAwB,WAAxB,EAAqC,QAArC,EAA+C,aAA/C,EAA8D,WAA9D,EAA2E,cAA3E,EAA2F,SAA3F,EAAsG,YAAtG,EAAoH,QAApH,EAA8H,QAA9H,EAAwI,aAAxI,EAAuJ,QAAvJ,EAAiK,OAAjK,EAA0K,sDAA1K,EAAkO,QAAlO,EAA2O,QAA3O,EAAqP,SAArP,EAAgQ,0BAAhQ,EAA4R,OAA5R,EAAqS,gBAArS,EAAuT,QAAvT,EAAgU,QAAhU,EAA0U,SAA1U,EAAqV,SAArV,EAAgW,OAAhW,EAAyW,oBAAzW,EAA8X,SAA9X,EAAyY,QAAzY,EAAmZ,QAAnZ,EAA6Z,OAA7Z,EAAsa,QAAta,EAA+a,UAA/a,CAAhB;AACA,IAAIC,WAAW,GAAG,CAAC,eAAD,EAAkB,UAAlB,EAA8B,aAA9B,EAA6C,yCAA7C,EAAwF,OAAxF,EAAiG,QAAjG,EAA2G,SAA3G,EAAsH,wBAAtH,EAAgJ,6CAAhJ,EAA+L,4BAA/L,EAA6N,OAA7N,EAAsO,YAAtO,EAAoP,UAApP,EAAgQ,SAAhQ,EAA2Q,oBAA3Q,EAAiS,MAAjS,EAAyS,OAAzS,EAAkT,OAAlT,EAA0T,OAA1T,EAAmU,SAAnU,EAA8U,SAA9U,EAAyV,UAAzV,EAAqW,WAArW,EAAkX,WAAlX,EAA8X,YAA9X,EAA4Y,UAA5Y,EAAwZ,UAAxZ,EAAoa,UAApa,EAAgb,UAAhb,EAA4b,SAA5b,EAAuc,SAAvc,EAAkd,gBAAld,EAAoe,SAApe,EAA+e,WAA/e,EAA4f,SAA5f,EAAugB,SAAvgB,EAAkhB,SAAlhB,EAA6hB,UAA7hB,EAAyiB,YAAziB,EAAujB,QAAvjB,EAAikB,SAAjkB,CAAlB;AAEA,ADFI,MCEEC,CDFGhE,MCEI,GAAG,IAAIjC,GDFhB,GAAwB,MAAM,SCElB,CAAW,CAAX,CAAhB;AACA,ADFQmB,IAAAA,ECEF+E,OAAO,EDFM,CCEH,EDFM,CAAd,CCEYlG,qBAAJ,CAAW,CAAX,CAAhB;AACA6F,ADFK,GAFD,CCIA,CAACxE,SAAL,CAAe4E,OAAf;AACAJ,IAAI,CAACxE,SAAL,CAAe6E,OAAf;AACAL,ADFI,ICEA,CAACzD,EDFIF,cCET,ADFI,CCEkB+D,EDFI,KCE1B,CDFgC;ACGhCE,ADFQ,ICEJ,ODFWhF,WAAP;ACGRiF,ADFK,GAFD,KCII;AACRlC,OAAO,CAACmC,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACA3B,ADFI,OAAKxC,ICEE,CAACkE,SAAZ,CAAsBC,CDFlB,ECEJ,CAA0B,ADFE,MAAM,KCElC;AACArB,ADFQ,OCED,CAACoB,GDFOrF,MCEf,CAAkBsF,GAAlB,CAAsB,EDFd,ICER;ADDK,GAFD;ACKJ,IAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,IAAxC,EAA8C;AAC1CD,ADFA,ECEAA,KDFKnE,OCEO,CAACqE,OAAb,CAAqB,ADFrB,GAAyBnF,MCEzB,ADFwB,ECEQhB,EDFI,ICEE,CAAC,CAAD,CAAtC;AACAiG,ADFIvF,ECEJuF,EDFIvF,UCEQ,CAACyF,EDFI,GAAGnF,ECEpB,CAAqB,GDFjB,MCEJ,EAAgChB,MAAM,CAAC,CAAD,CAAtC;AAEAoG,ADHC,ECGDA,CDLA,WCKY;AACf,CALD,MAKO;AACHA,ADHA,ECGAA,KDHKrE,OCGO,GDHZ,GAAkB,MAAM;ACI3B,ADHO,UAAMC,MAAM,GAAGC,eAAe,EAA9B;ACIR;ADHQ,UAAMC,OAAO,GAAG,EAAhB;AAEAtB,IAAAA,OAAO,CAACuB,OAAR,CAAgBb,CAAC,IAAI;ACE7BkD,ADDY,UAAIlD,CCCL,ADDM,CCCL+E,IDDUrE,MAAM,CAACI,KCC7B,CAA6B,MDDjB,ECCZ,ADD2C,ECCJ,UAAUkE,KAAV,EAAiB;AACxDd,ADDgBtD,ECChBsD,MDDgBtD,ICCN,GAAGsC,ADDU,CAACvD,IAAR,CAAaK,CAAb,ICCQ,CAACiF,KAAzB;AACAC,ADDa,ECCbA,KAAK;AACJ,ADDQ,CCFT,IDFQ;ACOR7C,ADFQ,ICEJ,CAAC0C,MDFUnE,OAAP,GCER,CAAsB,QAAtB,EAAgC,UAAUoE,KAAV,EAAiB;AAC7CjB,ADDC,ECCDA,CDZA,cCYe,GAAG,IAAlB;AACAH,EAAAA,IAAI,CAACa,SAAL,CAAeU,MAAf,CAAsB,WAAtB;AACAvB,ADDA,ECCAA,IAAI,CAACa,ADDA1D,MAAL,GCCA,ADDc,CCCC2D,GAAf,CAAmB,CDDC,QCCpB;AAEAU,ADFI,ECEJA,MDFQ1E,MAAM,GAAG,ICEE,CDFGC,eAAL,EAAb;ACGJ,MAAIkD,UAAU,GAAGwB,aAAa,EAA9B;AACAC,ADHI,ECGJA,SDHW5E,GCGC,CAAChC,EDHI,CAACsC,GCGC,CAAC6C,KDHT,GAAmB,CAAnB,CCGQ,CAAN,CDHqB,ICGEF,ADHzB,GAA8B,KAArC,KCGQ,CAAZ;AACA4B,ADHC,ECGDA,CDNA,SCMU;AACVhC,EAAAA,UAAU;AACVuB,ADHA,ECGAA,KDHKnE,OCGO,QDHZ,GAAuB,MAAM;ACI7BqE,ADHI,ECGJA,KAAK,CAACQ,ADHE1E,YAAY,ECGpB,CDHuB,CAAnB;ACIP,ADHO,CCTR,EAYG,KAZH,ADSYG,GAAG,GAAG,IAAIC,GAAJ,EAAV;ACKR0C,ADHQtE,ICGJ,ADHIA,CCGHyF,MDHU,CAAClE,OAAR,CAAgBb,CCGxB,ADHyB,CCGH,GDHO,ICG7B,EAA+B,YAAY;AACvC,ADHQ,MCGJ+D,MDHU5C,SCGd,ADHuB,ECGF,CDHKnB,CAAC,CAACvB,QAAF,EAAlB;ACIJyG,ADHIpE,ICGJoE,EDHIpE,GCGC,SDHW,GAAGK,SAAS,GAAGL,YAAZ,GAA2BK,SAA3B,GAAuCL,YAAtD,CAFiB,CAGjB;ACGJiD,ADFI,ICEJA,eAAe,GAAG,KAAlB;AACAH,IAAAA,IAAI,CAACa,SAAL,CAAeC,GAAf,CAAmB,WAAnB;AACAd,ADHI,ICGJA,IAAI,CAACa,CDHGxD,GAAG,CAACG,GAAJ,CCGR,ADHgBD,CCGDgE,MAAf,CAAsB,CDHd,CAAJ,EAAwB,KCG5B;AAEH,ADJWlE,QAAAA,GAAG,CAACI,GAAJ,CAAQF,SAAR,EAAmBF,GAAG,CAACK,GAAJ,CAAQH,SAAR,IAAqB,CAAxC;ACKf,ADJY,CCJb,MDEY,MAEO;ACMnBqB,ADLgBvB,GCKb,CAAC8D,IDLY9D,GAAG,CAACI,GAAJ,CAAQF,ICKxB,CAAqB,IDLL,EAAmB,CCKnC,ADLgB,ECKc,YAAY;AAElC4B,ADNK,ECMLA,WAAW,CAAC0B,SAAZ,CAAsBU,MAAtB,CAA6B,WAA7B;AACAnC,ADNC,ECMDA,GDhBA,KCgBQ,CAACyB,SAAT,CAAmBU,MAAnB,CAA0B,SAA1B;AACAnC,ADLA,ECKAA,QAAQ,CAACyB,ADLF,SCKP,CAAmBC,GAAnB,CAAuB,WAAvB;AACA3B,ADLIjC,ECKJiC,IDLIjC,OCKO,CAAC2D,IDLI,EAAE3D,GCKlB,CAAsB4D,GAAtB,CAA0B,IDNnB,KCMP;AACArB,ADLIrC,ECKJqC,IDLIrC,GCKG,CAACyD,KDLK,EAAExD,ECKf,CAAkBkE,ADLA,CAAC7D,GAAJ,CAAQR,CCKvB,CAAyB,MAAzB,IDLe;ACMf0B,ADRO,ECQPA,GAAG,ADRH,CCQIiC,SAAJ,CAAcC,GAAd,CAAkB,MAAlB;AACP,ADJI,CCJL,EDjBI;AC2BJrB,OAAO,CAAC0B,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;AAC1CvC,ADLA,ECKAA,GAAG,CAACiC,CDLC3F,QCKL,ADLA,CCKcqG,EDLE,ICKhB,CAAqB,CDLC,KCKtB;AACA9B,ADLI,ECKJA,OAAO,CAACoB,CDLG,QCKX,CAAkBC,EDLIxF,CCKtB,CAAsB,EDLX,GAAkB,CCK7B,cDLW,GAAoCC,SAApC,GAAgD,cAAhD,GAAiEI,WAAjE,GAA+E,gBAA/E,GAAkGH,aAAlG,GACH,aADG,GACaE,OAAO,CAACR,QAAR,EADpB;ACOJkE,ADLC,ECKDA,CDRA,OCQQ,CAACyB,SAAT,CAAmBU,MAAnB,CAA0B,WAA1B;AACApC,ADLH,ECKGA,WAAW,CAAC0B,SAAZ,CAAsBC,GAAtB,CAA0B,WAA1B;AACA3B,EAAAA,WAAW,CAAC0B,SAAZ,CAAsBU,MAAtB,CAA6B,SAA7B;AACAnC,EAAAA,QAAQ,CAACyB,SAAT,CAAmBC,GAAnB,CAAuB,SAAvB;AACH,CARD;AAUA/B,QAAQ,CAACoC,gBAAT,CAA0B,OAA1B,EAAmC,YAAY;AAE3Cd,EAAAA,IAAI,CAAC5D,gBAAL;AACAsE,EAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgCnG,MAAM,CAAC,CAAD,CAAtC;AACAiG,EAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgCnG,MAAM,CAAC,CAAD,CAAtC;AACA4D,EAAAA,OAAO,CAACmC,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACAnC,EAAAA,OAAO,CAACkC,SAAR,CAAkBU,MAAlB,CAAyB,cAAzB;AACAlB,EAAAA,IAAI,CAACzD,gBAAL,CAAsB6D,OAAtB;AACAA,EAAAA,OAAO,CAAC1F,QAAR,CAAiB,CAAjB;AACA2F,EAAAA,OAAO,CAAC3F,QAAR,CAAiB,CAAjB;AACAmG,EAAAA,YAAY;AACf,CAXD;;AAcA,SAASO,aAAT,GAAyB;AACrB,MAAIxB,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtC,SAAS,CAACrD,MAA9B,EAAsC2F,CAAC,EAAvC,EAA2C;AACvC,QAAItC,SAAS,CAACsC,CAAD,CAAT,CAAaC,OAAjB,EAA0B;AAEtB7B,MAAAA,UAAU,GAAGV,SAAS,CAACsC,CAAD,CAAT,CAAaR,KAA1B;AAEH;AACJ;;AAGD,SAAOpB,UAAP;AACH;;AAED,SAASuB,mBAAT,GAA+B;AAC3BtD,EAAAA,UAAU,CAAC6D,QAAX,GAAsB,IAAtB;AACA5D,EAAAA,WAAW,CAAC4D,QAAZ,GAAuB,IAAvB;AACA3D,EAAAA,UAAU,CAAC2D,QAAX,GAAsB,IAAtB;AACH;;AAED,SAASL,YAAT,CAAsBM,WAAtB,EAAmC;AAC/B,MAAIA,WAAJ,EAAiB;AACbxD,IAAAA,MAAM,CAACqC,SAAP,CAAiBU,MAAjB,CAAwB,KAAxB;AACA/C,IAAAA,MAAM,CAACqC,SAAP,CAAiBC,GAAjB,CAAqB,OAArB;AACAmB,IAAAA,YAAY,CAAC,UAAD,CAAZ;AACAC,IAAAA,WAAW;AACd,GALD,MAMK;AACD1D,IAAAA,MAAM,CAACqC,SAAP,CAAiBU,MAAjB,CAAwB,OAAxB;AACA/C,IAAAA,MAAM,CAACqC,SAAP,CAAiBC,GAAjB,CAAqB,KAArB;AACAmB,IAAAA,YAAY,CAAC,kCAAkCpC,YAAY,CAACE,aAAD,CAAZ,CAA4BzE,IAA/D,CAAZ;AACH;AACJ;AAED;;;AAEA,eAAeqF,IAAf,GAAsB;AAClBd,EAAAA,YAAY,GAAG,MAAMsC,kBAAkB,EAAvC;AACAb,EAAAA,KAAK;AACR;;AAED,SAASV,QAAT,GAAoB;AAChBwB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAGH;;AACD,SAASC,YAAT,GAAwB;AACpB9D,EAAAA,MAAM,CAACqC,SAAP,CAAiBU,MAAjB,CAAwB,KAAxB;AACA/C,EAAAA,MAAM,CAACqC,SAAP,CAAiBU,MAAjB,CAAwB,OAAxB;;AACA,MAAIlB,IAAI,CAAClD,MAAL,EAAJ,EAAmB;AACfqB,IAAAA,MAAM,CAAC+D,SAAP,GAAmB,kBAAnB;AAEH,GAHD,MAIK;AACD,QAAI9B,OAAO,CAAC5F,QAAR,KAAqB6F,OAAO,CAAC7F,QAAR,EAAzB,EAA6C;AACzC,UAAIF,KAAK,GAAGoG,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgCnG,MAAM,CAACH,KAAD,CAAN,GAAgB,CAAhD;AACA6D,MAAAA,MAAM,CAAC+D,SAAP,GAAmB,qBAAnB;AAEH,KALD,MAMK;AACD,UAAI5H,KAAK,GAAGoG,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,SAArB,EAAgCnG,MAAM,CAACH,KAAD,CAAN,GAAgB,CAAhD;AACA6D,MAAAA,MAAM,CAAC+D,SAAP,GAAmB,qBAAnB;AACH;AACJ;;AACD7D,EAAAA,OAAO,CAACmC,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACAnC,EAAAA,OAAO,CAACkC,SAAR,CAAkBU,MAAlB,CAAyB,cAAzB;AACAd,EAAAA,OAAO,CAAC1F,QAAR,CAAiB,CAAjB;AACA2F,EAAAA,OAAO,CAAC3F,QAAR,CAAiB,CAAjB;AACAmG,EAAAA,YAAY;AACf;;AACD,SAASgB,WAAT,GAAuB;AACnBE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,MAAIG,UAAU,GAAGnC,IAAI,CAAC1D,gBAAL,EAAjB;AACA6F,EAAAA,UAAU,CAACzH,QAAX,CAAoByH,UAAU,CAAC3H,QAAX,KAAwB,CAA5C;AACAuH,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH;;AAED,SAASV,UAAT,GAAsB;AAClB,MAAItB,IAAI,CAAC3D,cAAL,KAAwB2D,IAAI,CAAC9D,YAAL,EAA5B,EAAiD;AAC7C8D,IAAAA,IAAI,CAAC7D,aAAL;AACH,GAFD,MAEO;AACH,QAAI6D,IAAI,CAAC1D,gBAAL,GAAwB/B,KAAxB,OAAoC6F,OAAO,CAAC7F,KAAR,EAAxC,EAAyD;AACrD8D,MAAAA,OAAO,CAACmC,SAAR,CAAkBU,MAAlB,CAAyB,cAAzB;AACA5C,MAAAA,OAAO,CAACkC,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACAT,MAAAA,IAAI,CAACzD,gBAAL,CAAsB8D,OAAtB;AAEH,KALD,MAKO;AACHL,MAAAA,IAAI,CAACzD,gBAAL,CAAsB6D,OAAtB;AACA6B,MAAAA,YAAY;AACf;;AACDjC,IAAAA,IAAI,CAAC5D,gBAAL;AAEH;AACJ;;AAED,eAAe6E,KAAf,GAAuB;AAEnB9C,EAAAA,MAAM,CAAC+D,SAAP,GAAmB,EAAnB;AACAzC,EAAAA,OAAO,GAAG2C,wBAAwB,EAAlC,CAHmB,CAGmB;;AACtC1C,EAAAA,aAAa,GAAGD,OAAO,CAAC,CAAD,CAAvB,CAJmB,CAIS;;AAC5B4C,EAAAA,OAAO,CAAC5C,OAAD,CAAP;AACA6C,EAAAA,wBAAwB,CAACC,mBAAmB,EAApB,CAAxB;AACAC,EAAAA,UAAU,CAACC,WAAW,CAAC/C,aAAD,CAAZ,CAAV;AACA7B,EAAAA,UAAU,CAAC6D,QAAX,GAAsB,KAAtB;AACA5D,EAAAA,WAAW,CAAC4D,QAAZ,GAAuB,KAAvB;AACA3D,EAAAA,UAAU,CAAC2D,QAAX,GAAsB,KAAtB;AACA7D,EAAAA,UAAU,CAAC4D,OAAX,GAAqB,KAArB;AACA3D,EAAAA,WAAW,CAAC2D,OAAZ,GAAsB,KAAtB;AACA1D,EAAAA,UAAU,CAAC0D,OAAX,GAAqB,KAArB;AACH;;AAED,SAASW,wBAAT,GAAoC;AAChC,MAAIM,IAAI,GAAGC,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAvB;AACA,MAAI+G,IAAI,GAAGD,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAvB;AACA,MAAIgH,IAAI,GAAGF,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAvB;;AAEA,SAAM6G,IAAI,KAAKE,IAAf,EAAoB;AAChBA,IAAAA,IAAI,GAAGD,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAnB;AACH;;AACD,SAAM6G,IAAI,KAAKG,IAAf,EAAoB;AAChBA,IAAAA,IAAI,GAAGF,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAnB;AACH;;AACD,SAAMgH,IAAI,KAAKD,IAAf,EAAoB;AAChBA,IAAAA,IAAI,GAAGD,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAnB;AACH;;AACD,SAAMiH,mBAAmB,CAACJ,IAAD,CAAnB,KAA8B,KAApC,EAA0C;AACtCA,IAAAA,IAAI,GAAGC,YAAY,CAAC,CAAD,EAAInD,YAAY,CAAC3D,MAAjB,CAAnB;AACH;;AACD,SAAO,CAAC6G,IAAD,EAAOE,IAAP,EAAaC,IAAb,CAAP;AACH;AAED;;;AACA,SAASC,mBAAT,CAA6BvE,GAA7B,EAAiC;AAC7B,MAAG0B,UAAU,KAAK,MAAlB,EAAyB;AACrB,SAAI,IAAIuB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACtB,SAAS,CAACrE,MAAzB,EAAgC2F,CAAC,EAAjC,EAAoC;AAChC,UAAGhC,YAAY,CAACjB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BiF,SAAS,CAACsB,CAAD,CAAvC,EAA2C;AAC1C,eAAO,IAAP;AACA;AACJ;AACJ;;AACD,MAAGvB,UAAU,KAAK,QAAlB,EAA2B;AACvB,SAAI,IAAIuB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACrB,WAAW,CAACtE,MAA3B,EAAkC2F,CAAC,EAAnC,EAAsC;AAClC,UAAGhC,YAAY,CAACjB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BkF,WAAW,CAACqB,CAAD,CAAzC,EAA6C;AAC5C,eAAO,IAAP;AACA;AACJ;AACJ;;AACD,MAAGvB,UAAU,KAAK,MAAlB,EAAyB;AACrB,SAAI,IAAIuB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACtB,SAAS,CAACrE,MAAzB,EAAgC2F,CAAC,EAAjC,EAAoC;AAChC,UAAGhC,YAAY,CAACjB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BiF,SAAS,CAACsB,CAAD,CAAvC,EAA2C;AAC1C,eAAO,KAAP;AACA;AACJ;;AACD,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACrB,WAAW,CAACtE,MAA3B,EAAkC2F,CAAC,EAAnC,EAAsC;AAClC,UAAGhC,YAAY,CAACjB,GAAD,CAAZ,CAAkBtD,IAAlB,KAA2BkF,WAAW,CAACqB,CAAD,CAAzC,EAA6C;AAC5C,eAAO,KAAP;AACA;AACJ;;AAED,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;;AACD,eAAeM,kBAAf,GAAoC;AAChC,MAAI;AACA,QAAIiB,QAAQ,GAAG,MAAMC,KAAK,CAACzD,OAAD,CAA1B;AACA,QAAIC,YAAY,GAAG,MAAMuD,QAAQ,CAACE,IAAT,EAAzB;AACA,WAAOzD,YAAP;AACH,GAJD,CAIE,OAAO0D,KAAP,EAAc;AACZnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH;AACJ;;AACD,SAAStB,YAAT,CAAsBuB,GAAtB,EAA2B;AACvBhF,EAAAA,MAAM,CAAC+D,SAAP,GAAmBiB,GAAnB;AACH;AACD;;;;;AAGA,SAASR,YAAT,CAAsBS,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,MAAIC,YAAY,GAAG,IAAnB;AACAF,EAAAA,GAAG,GAAGG,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,YAAY,GAAGC,IAAI,CAACE,KAAL,CAAWJ,GAAX,IAAkB,CAArB,GAAyBE,IAAI,CAACE,KAAL,CAAWJ,GAAX,CAA3C;AACA,MAAIK,MAAM,GAAGH,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBL,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAA3D;AACA,SAAOM,MAAP;AACH;;AAED,SAASpB,wBAAT,CAAkCqB,YAAlC,EAAgD;AAChD;;;AAGIlG,EAAAA,KAAK,CAACmG,SAAN,GAAkBpE,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAZ,CAAyBxE,IAA3C;AACA0C,EAAAA,MAAM,CAACiG,SAAP,GAAmBpE,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAZ,CAAyBxE,IAA5C;AACA2C,EAAAA,KAAK,CAACgG,SAAN,GAAkBpE,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAZ,CAAyBxE,IAA3C;AACA4C,EAAAA,UAAU,CAACmD,KAAX,GAAmBvB,OAAO,CAAC,CAAD,CAA1B;AACA3B,EAAAA,WAAW,CAACkD,KAAZ,GAAoBvB,OAAO,CAAC,CAAD,CAA3B;AACA1B,EAAAA,UAAU,CAACiD,KAAX,GAAmBvB,OAAO,CAAC,CAAD,CAA1B;AACH;;AAED,SAAS+C,UAAT,CAAoBqB,IAApB,EAA0B;AACtBvG,EAAAA,OAAO,CAACwG,GAAR,GAAcD,IAAd;AACH;;AAED,SAAStB,mBAAT,GAA+B;AAC3B,MAAIwB,KAAK,GAAG,EAAZ;AACA,MAAIC,UAAJ;;AACA,OAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/B,OAAO,CAAC5D,MAA5B,EAAoC2F,CAAC,EAArC,EAAyC;AACrCwC,IAAAA,UAAU,GAAGvE,OAAO,CAAC+B,CAAD,CAApB;AACAuC,IAAAA,KAAK,CAACvC,CAAD,CAAL,GAAWhC,YAAY,CAACwE,UAAD,CAAZ,CAAyB/I,IAApC;AACH;;AACD,SAAO8I,KAAP;AACH;;AAED,SAAStB,WAAT,CAAqB/C,aAArB,EAAoC;AAChC,SAAOF,YAAY,CAACE,aAAD,CAAZ,CAA4BmE,IAAnC;AACH;;AACD,SAASxB,OAAT,CAAiB4B,KAAjB,EAAwB;AAEpB,OAAK,IAAIzC,CAAC,GAAGyC,KAAK,CAACpI,MAAN,GAAe,CAA5B,EAA+B2F,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAM0C,CAAC,GAAGX,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBlC,CAA3B,CAAV;AACA,UAAM2C,IAAI,GAAGF,KAAK,CAACzC,CAAD,CAAlB;AACAyC,IAAAA,KAAK,CAACzC,CAAD,CAAL,GAAWyC,KAAK,CAACC,CAAD,CAAhB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWC,IAAX;AACH;AACJ;;AAED,SAAStD,YAAT,GAAwB;AACpBxC,EAAAA,OAAO,CAAC6D,SAAR,GAAoB9B,OAAO,CAAC5F,QAAR,KAAqB,GAArB,GAA2BwF,IAAI,CAAC9D,YAAL,EAA/C;AACAoC,EAAAA,OAAO,CAAC4D,SAAR,GAAoB,UAAU7B,OAAO,CAAC7F,QAAR,EAAV,GAA+B,GAA/B,GAAqCwF,IAAI,CAAC9D,YAAL,EAAzD;AACAsC,EAAAA,YAAY,CAAC0D,SAAb,GAAyBxB,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAzB;AACAlC,EAAAA,YAAY,CAACyD,SAAb,GAAyB,UAAUxB,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAnC;AACA;;;AAGH,EACD;AACA","file":"javascripts.ea2fe77b.js","sourceRoot":"../src","sourcesContent":["export function Player(playerId){\n    // 1\n    const id = playerId;\n    let score = 0;\n\n\n    this.getId = () => {\n        return id;\n    }\n  \n    this.getScore = () => {\n        return Number(score);\n    }\n    // 2 3 \n    this.setScore = (playerScore) => {\n        if (playerScore < 0) {\n            throw new Error(\"Score cannot be negative\");\n        }\n        score = Number(playerScore);\n    }\n\n    this.toString = () => {\n        return \"id: \" + id + \", score: \" + score;\n    };\n}","import { Player } from \"./player-module-v2\";\n\n\n\nexport function Game(gameName, numberOfTurns) {\n    const name = gameName;\n    let noOfTurns = numberOfTurns;\n\n    let currentPlayer = undefined;\n    let players = [];\n    let currentTurn = 1;\n\n    this.getGameName = () => {\n        return name;\n    }\n\n    this.addPlayer = (player) => {\n        players.push(player);\n    }\n\n    this.removePlayer = (player) => {\n        let initialLength = players.length;\n        players = players.filter(p => p.id !== player.id);\n\n        if (initialLength === players.length) {\n            throw new Error(\"Cannot remove the player. Player not found.\");\n        }\n    }\n\n    this.getNoOfPlayers = () => {\n        return players.length;\n    }\n\n    this.setNoOfTurns = (numberOfTurns) => {\n        noOfTurns = numberOfTurns;\n    }\n\n    this.getNoOfTurns = () => {\n        return noOfTurns;\n    }\n    \n    this.incrementTurn = () => {\n        if (currentTurn < noOfTurns) {\n            currentTurn++;\n        } else {\n            throw new Error(\"Current turn can not be larger than total number of turns.\");\n        }\n    }\n\n    this.resetCurrentTurn = () => {\n        currentTurn = 1;\n    }\n\n    this.getCurrentTurn = () => {\n        return currentTurn;\n    }\n\n    this.getCurrentPlayer = () => {\n        return currentPlayer;\n    }\n\n    this.setCurrentPlayer = (player) => {\n        currentPlayer = player;\n    }\n    \n    this.getWinners = () => {\n        const result = _isDrawInternal();\n        const winners = [];\n\n        players.forEach(p => {\n            if (p === result.highestScore) {\n                winners.push(p);\n            }\n        });\n        return winners;\n\n    }\n\n    this.isDraw = () => {\n        let result = this._isDrawInternal();\n        return result.frequency > 1 ? true : false;\n    }\n\n    this._isDrawInternal = () => {\n        let highestScore = 0;\n        let map = new Map();\n\n        players.forEach(p => {\n            const currScore = p.getScore();\n            highestScore = currScore > highestScore ? currScore : highestScore;\n            //let frequency = map.get(currScore);\n            // if frequency is null/undefined/0/\"\" the next line is false\n            if (map.has(currScore)) {\n                map.set(currScore, map.get(currScore) + 1);\n            } else {\n                map.set(currScore, 1);\n            }\n        });\n      \n        return {\n            highestScore: highestScore,\n            frequency: map.get(highestScore)\n        };\n\n    }\n\n    this.toString = () => {\n        return \"name: \" + name + \", noOfTurns: \" + noOfTurns + \", currTurn: \" + currentTurn + \", currPlayer: \" + currentPlayer +\n            \"\\nplayers: \" + players.toString();\n    }\n} ","import { Player } from \"../modulev2/player-module-v2\";\nimport { Game } from \"../modulev2/game-module-v2\";\n// set constants for number of options, country array\n// vars: options(array which keeps indexes), correctAnswer(index), userAnswer(index),   \n\n\n/* ----------------------- HTML elements -------------------------- */\nlet flagImg = document.getElementById(\"flag\");\nlet first = document.querySelector(\"#options .option:nth-of-type(1) label\");\nlet second = document.querySelector(\"#options .option:nth-of-type(2) label\");\nlet third = document.querySelector(\"#options .option:nth-of-type(3) label\");\nlet firstInput = document.getElementById(\"choice1\");\nlet secondInput = document.getElementById(\"choice2\");\nlet thirdInput = document.getElementById(\"choice3\");\nlet firstCircle = document.getElementById(\"circleOne\");\nlet secondCircle = document.getElementById(\"circleTwo\");\nlet thirdCircle = document.getElementById(\"circleThree\");\nlet answer = document.getElementById(\"answer\");\nlet form = document.querySelector(\"form\");\nlet p1Score = document.querySelector(\"#rightScore\");\nlet p2Score = document.querySelector(\"#leftScore\");\nlet opt = document.querySelector(\"#settings\");\nlet p1MatchScore = document.querySelector(\"#p1MatchScore\");\nlet p2MatchScore = document.querySelector(\"#p2MatchScore\");\nlet resetBtn = document.querySelector(\"#resetBtn\");\nlet levelNumber = document.querySelector(\"#levelNumber\");\nlet matchNumber = document.querySelector(\"#matchNumber\");\nlet playersNumber = document.querySelector(\"#playersNumber\");\nlet optionsPage = document.querySelector(\"#optionsPage\");\nlet gamePage = document.querySelector(\"#gamePage\");\nlet back = document.querySelector(\"#backToGame\");\nlet levelChoice = document.querySelector(\"#level-select\");\nlet radioBtns = document.querySelectorAll(\"input[type=radio]\");\nlet playBtn = document.querySelector(\"#play\");\n// other variables \nconst NUMBER_OF_OPTIONS = 3;\nlet gameNumber = 1;\nconst API_URL = \"https://restcountries.eu/rest/v2/all\"\nlet countryArray;\nlet options = [];\nlet correctAnswer;\nlet next = document.getElementById(\"nextBtn\");\nlet userAnswer;\nlet flagsPerMatch = 2;\nlet nextFlagAllowed = false;\nlet level = \"medium\";\nlet game = new Game(\"Flag game\", flagsPerMatch);\nlet difficulty = \"medium\";\nlet easyFlags = [\"Korea (Republic of)\", \"Australia\", \"Poland\", \"Netherlands\", \"Indonesia\", \"Saudi Arabia\", \"Mayotte\", \"Antarctica\", \"Israel\", \"Canada\", \"Switzerland\", \"Brazil\", \"Japan\", \"United Kingdom of Great Britain and Northern Ireland\", \"Sweden\",\"Turkey\", \"Germany\", \"United States of America\", \"Spain\", \"United Kingdom\", \"Cyprus\",\"Greece\", \"Austria\", \"Croatia\", \"Italy\", \"Russian Federation\",\"Ireland\", \"Poland\", \"France\", \"China\", \"Norway\",\"Portugal\"];\nlet mediumFlags = [\"Liechtenstein\", \"Thailand\", \"Puerto Rico\", \"Korea (Democratic People's Republic of)\", \"Kenya\", \"Mexico\", \"Georgia\", \"Bosnia and Herzegovina\", \"Macedonia (the former Yugoslav Republic of)\", \"Saint Martin (French part)\", \"Malta\", \"Luxembourg\", \"Bulgaria\", \"Tunisia\", \"Republic of Kosovo\", \"Iraq\", \"India\", \"Egypt\",\"Chile\", \"Uruguay\", \"Belgium\", \"Mongolia\", \"Greenland\", \"Lithuania\",\"Montenegro\", \"Holy See\", \"Viet Nam\", \"Slovakia\", \"Slovenia\", \"Albania\", \"Hungary\", \"Czech Republic\", \"Denmark\", \"Macedonia\", \"Belarus\", \"Ukraine\", \"Estonia\", \"Lithuana\", \"Luxenbourg\", \"Latvia\", \"Romania\"];\n\nconst player1 = new Player(1);\nconst player2 = new Player(2);\ngame.addPlayer(player1);\ngame.addPlayer(player2);\ngame.setCurrentPlayer(player1);\ninit();\ninitGame();\np1Score.classList.add(\"activePlayer\");\noptionsPage.classList.add(\"invisible\");\nplayBtn.classList.add(\"bold\");\n\nif (localStorage.getItem(\"player1\") === null) {\n    localStorage.setItem('player1', Number(0));\n    localStorage.setItem('player2', Number(0));\n    \n    renderScores()\n} else {\n    renderScores()\n}\n/* -------------------------- Event listeners ---------------------------- */\nlevelChoice.addEventListener(\"change\", function (event) {\ndifficulty = levelChoice.value;\nreset();\n});\n\nform.addEventListener(\"change\", function (event) {\n    nextFlagAllowed = true;\n    next.classList.remove(\"invisible\");\n    next.classList.add(\"visible\");\n\n    disableRadioButtons();\n    let userAnswer = getUserAnswer();\n    renderAnswer(Number(userAnswer) === correctAnswer);\n    changeTurn();\n    gameNumber++;\n    renderScores();\n    event.preventDefault();\n}, false);\n\nnext.addEventListener(\"click\", function () {\n    if (nextFlagAllowed) {\n        reset();\n        nextFlagAllowed = false;\n        next.classList.add(\"invisible\");\n        next.classList.remove(\"visible\");\n\n    }\n});\n\nopt.addEventListener(\"click\", function () {\n    \n        optionsPage.classList.remove(\"invisible\");\n        gamePage.classList.remove(\"visible\");\n        gamePage.classList.add(\"invisible\");\n        optionsPage.classList.add(\"visible\");\n        playBtn.classList.remove(\"bold\");\n        opt.classList.add(\"bold\");\n});\n\nplayBtn.addEventListener(\"click\", function () {\n    opt.classList.remove(\"bold\");\n    playBtn.classList.add(\"bold\");\n    \n    gamePage.classList.remove(\"invisible\");\n    optionsPage.classList.add(\"invisible\");\n    optionsPage.classList.remove(\"visible\");\n    gamePage.classList.add(\"visible\");\n});\n\nresetBtn.addEventListener(\"click\", function () {\n    \n    game.resetCurrentTurn();\n    localStorage.setItem('player1', Number(0));\n    localStorage.setItem('player2', Number(0));\n    p1Score.classList.add(\"activePlayer\");\n    p2Score.classList.remove(\"activePlayer\");\n    game.setCurrentPlayer(player1);\n    player1.setScore(0);\n    player2.setScore(0);\n    renderScores();\n});\n\n\nfunction getUserAnswer() {\n    let userAnswer = \"\";\n    for (var i = 0; i < radioBtns.length; i++) {\n        if (radioBtns[i].checked) {\n\n            userAnswer = radioBtns[i].value;\n\n        }\n    }\n    \n\n    return userAnswer;\n}\n\nfunction disableRadioButtons() {\n    firstInput.disabled = true;\n    secondInput.disabled = true;\n    thirdInput.disabled = true;\n}\n\nfunction renderAnswer(userGuessed) {\n    if (userGuessed) {\n        answer.classList.remove(\"red\");\n        answer.classList.add(\"green\");\n        renderResult(\"Correct!\");\n        updateScore();\n    }\n    else {\n        answer.classList.remove(\"green\");\n        answer.classList.add(\"red\");\n        renderResult(\"Inncorect! Correct answer is \" + countryArray[correctAnswer].name);\n    }\n}\n\n/* ------------------------------ main methods --------------------------- */\n\nasync function init() {\n    countryArray = await requestCountryData();\n    reset();\n}\n\nfunction initGame() {\n    console.log(\"Init game\");\n\n\n}\nfunction initNewMatch() {\n    answer.classList.remove(\"red\");\n    answer.classList.remove(\"green\");\n    if (game.isDraw()) {\n        answer.innerHTML = \"It is a draw!!!!\";\n\n    }\n    else {\n        if (player1.getScore() > player2.getScore()) {\n            let score = localStorage.getItem(\"player1\");\n            localStorage.setItem(\"player1\", Number(score) + 1);\n            answer.innerHTML = \"player one has won.\";\n\n        }\n        else {\n            let score = localStorage.getItem(\"player2\");\n            localStorage.setItem(\"player2\", Number(score) + 1);\n            answer.innerHTML = \"player two has won.\";\n        }\n    }\n    p1Score.classList.add(\"activePlayer\");\n    p2Score.classList.remove(\"activePlayer\");\n    player1.setScore(0);\n    player2.setScore(0);\n    renderScores();\n}\nfunction updateScore() {\n    console.log(\"Updating score\");\n    let currPlayer = game.getCurrentPlayer();\n    currPlayer.setScore(currPlayer.getScore() + 1);\n    console.log(\"increasing player score and rendering\");\n}\n\nfunction changeTurn() {\n    if (game.getCurrentTurn() < game.getNoOfTurns()) {\n        game.incrementTurn();\n    } else {\n        if (game.getCurrentPlayer().getId() === player1.getId()) {\n            p1Score.classList.remove(\"activePlayer\");\n            p2Score.classList.add(\"activePlayer\");\n            game.setCurrentPlayer(player2);\n\n        } else {\n            game.setCurrentPlayer(player1);\n            initNewMatch();\n        }\n        game.resetCurrentTurn();\n\n    }\n}\n\nasync function reset() {\n\n    answer.innerHTML = \"\";\n    options = generateOptionsAsIndexes(); // 56, 78, 134\n    correctAnswer = options[0]; // 56\n    shuffle(options);\n    renderCountryNamesOnBtns(extractCountryNames());\n    setFlagUrl(extractFlag(correctAnswer));\n    firstInput.disabled = false;\n    secondInput.disabled = false;\n    thirdInput.disabled = false;\n    firstInput.checked = false;\n    secondInput.checked = false;\n    thirdInput.checked = false;\n}\n\nfunction generateOptionsAsIndexes() {\n    let opt1 = getRandomInt(0, countryArray.length);\n    let opt2 = getRandomInt(0, countryArray.length);\n    let opt3 = getRandomInt(0, countryArray.length);\n    \n    while(opt1 === opt2){\n        opt2 = getRandomInt(0, countryArray.length);\n    }\n    while(opt1 === opt3){\n        opt3 = getRandomInt(0, countryArray.length);\n    }\n    while(opt3 === opt2){\n        opt2 = getRandomInt(0, countryArray.length);\n    }\n    while(isCountryHardEnough(opt1) === false){\n        opt1 = getRandomInt(0, countryArray.length);\n    }\n    return [opt1, opt2, opt3];\n}\n\n/* ------------------------------ heplers ----------------------------- */\nfunction isCountryHardEnough(opt){\n    if(difficulty === \"easy\"){\n        for(let i=0; i<easyFlags.length;i++){\n            if(countryArray[opt].name === easyFlags[i]){\n             return true;   \n            }\n        }\n    }\n    if(difficulty === \"medium\"){\n        for(let i=0; i<mediumFlags.length;i++){\n            if(countryArray[opt].name === mediumFlags[i]){\n             return true;   \n            }\n        }\n    }\n    if(difficulty === \"hard\"){\n        for(let i=0; i<easyFlags.length;i++){\n            if(countryArray[opt].name === easyFlags[i]){\n             return false;   \n            }\n        }\n        for(let i=0; i<mediumFlags.length;i++){\n            if(countryArray[opt].name === mediumFlags[i]){\n             return false;   \n            }\n        }\n        \n        return true;\n    }\n    return false;\n}\nasync function requestCountryData() {\n    try {\n        let response = await fetch(API_URL);\n        let countryArray = await response.json();\n        return countryArray;\n    } catch (error) {\n        console.log(error);\n    }\n}\nfunction renderResult(msg) {\n    answer.innerHTML = msg;\n}\n/**\n * Returns a random number between min (inclusive) and max(exclusive)\n */\nfunction getRandomInt(min, max) {\n    let maxExclusive = true;\n    min = Math.ceil(min);\n    max = maxExclusive ? Math.floor(max) - 1 : Math.floor(max);\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    return random;\n}\n\nfunction renderCountryNamesOnBtns(countryNames) {\n/*     first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name; */\n    first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name;\n    firstInput.value = options[0];\n    secondInput.value = options[1];\n    thirdInput.value = options[2];\n}\n\nfunction setFlagUrl(flag) {\n    flagImg.src = flag;\n}\n\nfunction extractCountryNames() {\n    let names = [];\n    let countryNmb;\n    for (let i = 0; i < options.length; i++) {\n        countryNmb = options[i];\n        names[i] = countryArray[countryNmb].name;\n    }\n    return names;\n}\n\nfunction extractFlag(correctAnswer) {\n    return countryArray[correctAnswer].flag;\n}\nfunction shuffle(array) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nfunction renderScores() {\n    p1Score.innerHTML = player1.getScore() + \"/\" + game.getNoOfTurns();\n    p2Score.innerHTML = \"  :  \" + player2.getScore() + \"/\" + game.getNoOfTurns();\n    p1MatchScore.innerHTML = localStorage.getItem(\"player1\");\n    p2MatchScore.innerHTML = \"  :  \" + localStorage.getItem(\"player2\");\n    /* levelNumber.innerHTML = level;\n    matchNumber.innerHTML = flagsPerMatch;\n    playersNumber.innerHTML = game.getNoOfPlayers(); */\n}\n//localStorage.getItem(\"player1\") - match score\n//player1.getScore() -- actual score game.getNoOfTurns()"]}