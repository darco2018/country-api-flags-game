{"version":3,"sources":["index.js"],"names":["flagImg","document","getElementById","first","querySelector","second","third","firstInput","secondInput","thirdInput","firstCircle","secondCircle","thirdCircle","answer","form","NUMBER_OF_OPTIONS","API_URL","countryArray","correctAnswer","userAnswer","options","next","init","requestCountryData","reset","innerHTML","generateOptionsAsIndexes","shuffle","renderCountryNamesOnBtns","extractCountryNames","setFlagUrl","extractFlag","checked","getRandomInt","length","generateCorrectAnswer","index","response","fetch","json","error","console","log","renderResult","msg","min","max","random","Math","ceil","floor","countryNames","innerText","name","value","flag","src","names","countryNmb","i","array","j","temp","addEventListener","event","FormData","option","Number","preventDefault"],"mappings":";AAIA,IAAIA,EAAUC,SAASC,eAAe,QAClCC,EAAQF,SAASG,cAAc,yCAC/BC,EAASJ,SAASG,cAAc,yCAChCE,EAAQL,SAASG,cAAc,yCAC/BG,EAAaN,SAASC,eAAe,WACrCM,EAAcP,SAASC,eAAe,WACtCO,EAAaR,SAASC,eAAe,WACrCQ,EAAcT,SAASC,eAAe,aACtCS,EAAeV,SAASC,eAAe,aACvCU,EAAcX,SAASC,eAAe,eACtCW,EAASZ,SAASC,eAAe,UACjCY,EAAOb,SAASG,cAAc,QAElC,MAAMW,EAAoB,EACpBC,EAAU,uCAChB,IAAIC,EAEAC,EAEAC,EAHAC,EAAU,GAEVC,EAAOpB,SAASC,eAAe,WA4BnC,eAAeoB,IACXL,QAAqBM,IACrBC,IAIJ,eAAeA,IACXX,EAAOY,UAAY,GACnBL,EAAUM,IACVR,EAAgBE,EAAQ,GACxBO,EAAQP,GACRQ,EAAyBC,KACzBC,EAAWC,EAAYb,IACvBX,EAAWyB,SAAU,EACrBxB,EAAYwB,SAAU,EACtBvB,EAAWuB,SAAU,EAGzB,SAASN,IAIE,MAAA,CAHIO,EAAa,EAAGhB,EAAaiB,QAC7BD,EAAa,EAAGhB,EAAaiB,QAC7BD,EAAa,EAAGhB,EAAaiB,SAI5C,SAASC,EAAsBf,GAEpBgB,OADKH,EAAa,EAAGb,EAAQc,QAMxC,eAAeX,IACP,IACIc,IAAAA,QAAiBC,MAAMtB,GAEpBC,aADkBoB,EAASE,OAEpC,MAAOC,GACLC,QAAQC,IAAIF,IAGpB,SAASG,EAAaC,GAClB/B,EAAOY,UAAYmB,EAKvB,SAASX,EAAaY,EAAKC,GAKhBC,OAHPF,EAAMG,KAAKC,KAAKJ,GAChBC,EAAqBE,KAAKE,MAAMJ,GAAO,EAC1BE,KAAKE,MAAMF,KAAKD,UAAYD,EAAMD,EAAM,IAAMA,EAI/D,SAASjB,EAAyBuB,GAC9BhD,EAAMiD,UAAYnC,EAAaG,EAAQ,IAAIiC,KAC3ChD,EAAO+C,UAAYnC,EAAaG,EAAQ,IAAIiC,KAC5C/C,EAAM8C,UAAYnC,EAAaG,EAAQ,IAAIiC,KAC3C9C,EAAW+C,MAAQlC,EAAQ,GAC3BZ,EAAY8C,MAAQlC,EAAQ,GAC5BX,EAAW6C,MAAQlC,EAAQ,GAG/B,SAASU,EAAWyB,GAChBvD,EAAQwD,IAAMD,EAGlB,SAAS1B,IACD4B,IACAC,EADAD,EAAQ,GAEP,IAAA,IAAIE,EAAI,EAAGA,EAAIvC,EAAQc,OAAQyB,IAChCD,EAAatC,EAAQuC,GACrBF,EAAME,GAAK1C,EAAayC,GAAYL,KAEjCI,OAAAA,EAGX,SAAS1B,EAAYb,GACVD,OAAAA,EAAaC,GAAeqC,KAEvC,SAAS5B,EAAQiC,GAER,IAAA,IAAID,EAAIC,EAAM1B,OAAS,EAAGyB,EAAI,EAAGA,IAAK,CACjCE,MAAAA,EAAIb,KAAKE,MAAMF,KAAKD,SAAWY,GAC/BG,EAAOF,EAAMD,GACnBC,EAAMD,GAAKC,EAAMC,GACjBD,EAAMC,GAAKC,GA/GnBxC,IAGAR,EAAKiD,iBAAiB,SAAU,SAAUC,GAClC5C,IAAAA,EAAU,IAAI6C,SAASnD,GACvBK,IAAAA,EAAa,GACZ,IAAA,MAAM+C,KAAU9C,EACjBD,EAAa+C,EAAO,GAExBvB,EAAawB,OAAOhD,KAAgBD,EAC9B,WACA,gCAAkCD,EAAaC,GAAemC,MAEpEW,EAAMI,mBACP,GAEH/C,EAAK0C,iBAAiB,QAAS,WAC3BvC","file":"src.69513589.js","sourceRoot":"../src","sourcesContent":["// set constants for number of options, country array\n// vars: options(array which keeps indexes), correctAnswer(index), userAnswer(index),   \n\n/* ----------------------- HTML elements -------------------------- */\nlet flagImg = document.getElementById(\"flag\");\nlet first = document.querySelector(\"#options .option:nth-of-type(1) label\");\nlet second = document.querySelector(\"#options .option:nth-of-type(2) label\");\nlet third = document.querySelector(\"#options .option:nth-of-type(3) label\");\nlet firstInput = document.getElementById(\"choice1\");\nlet secondInput = document.getElementById(\"choice2\");\nlet thirdInput = document.getElementById(\"choice3\");\nlet firstCircle = document.getElementById(\"circleOne\");\nlet secondCircle = document.getElementById(\"circleTwo\");\nlet thirdCircle = document.getElementById(\"circleThree\");\nlet answer = document.getElementById(\"answer\");\nlet form = document.querySelector(\"form\");\n// other variables \nconst NUMBER_OF_OPTIONS = 3;\nconst API_URL = \"https://restcountries.eu/rest/v2/all\"\nlet countryArray;\nlet options = [];\nlet correctAnswer;\nlet next = document.getElementById(\"nextBtn\");\nlet userAnswer;\n\n\ninit();\n\n/* -------------------------- Event listeners ---------------------------- */\nform.addEventListener(\"submit\", function (event) {\n    var options = new FormData(form);\n    let userAnswer = \"\";\n    for (const option of options) {\n        userAnswer = option[1];\n    };\n    renderResult(Number(userAnswer) === correctAnswer\n        ? \"Correct!\"\n        : \"Inncorect! Correct answer is \" + countryArray[correctAnswer].name);\n\n    event.preventDefault();\n}, false);\n\nnext.addEventListener(\"click\", function () {\n    reset();\n});\n\n\n\n/* ------------------------------ main methods --------------------------- */\n\nasync function init() {\n    countryArray = await requestCountryData();\n    reset();\n}\n\n\nasync function reset() {\n    answer.innerHTML = \"\";\n    options = generateOptionsAsIndexes(); // 56, 78, 134\n    correctAnswer = options[0]; // 56\n    shuffle(options);\n    renderCountryNamesOnBtns(extractCountryNames());\n    setFlagUrl(extractFlag(correctAnswer));\n    firstInput.checked = false;\n    secondInput.checked = false;\n    thirdInput.checked = false;\n}\n\nfunction generateOptionsAsIndexes() {\n    let opt1 = getRandomInt(0, countryArray.length);\n    let opt2 = getRandomInt(0, countryArray.length);\n    let opt3 = getRandomInt(0, countryArray.length);\n    return [opt1, opt2, opt3];\n}\n\nfunction generateCorrectAnswer(options) {\n    let index = getRandomInt(0, options.length);\n    return index;\n}\n\n\n/* ------------------------------ heplers ----------------------------- */\nasync function requestCountryData() {\n    try {\n        let response = await fetch(API_URL);\n        let countryArray = await response.json();\n        return countryArray;\n    } catch (error) {\n        console.log(error);\n    }\n}\nfunction renderResult(msg) {\n    answer.innerHTML = msg;\n}\n/**\n * Returns a random number between min (inclusive) and max(exclusive)\n */\nfunction getRandomInt(min, max) {\n    let maxExclusive = true;\n    min = Math.ceil(min);\n    max = maxExclusive ? Math.floor(max) - 1 : Math.floor(max);\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    return random;\n}\n\nfunction renderCountryNamesOnBtns(countryNames) {\n    first.innerText = countryArray[options[0]].name;\n    second.innerText = countryArray[options[1]].name;\n    third.innerText = countryArray[options[2]].name;\n    firstInput.value = options[0];\n    secondInput.value = options[1];\n    thirdInput.value = options[2];\n}\n\nfunction setFlagUrl(flag) {\n    flagImg.src = flag;\n}\n\nfunction extractCountryNames() {\n    let names = [];\n    let countryNmb;\n    for (let i = 0; i < options.length; i++) {\n        countryNmb = options[i];\n        names[i] = countryArray[countryNmb].name;\n    }\n    return names;\n}\n\nfunction extractFlag(correctAnswer) {\n    return countryArray[correctAnswer].flag;\n}\nfunction shuffle(array) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}"]}